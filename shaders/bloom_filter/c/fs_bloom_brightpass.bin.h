static const uint8_t fs_bloom_brightpass_bin_glsl[] = {
  0x46, 0x53, 0x48, 0x06, 0x6f, 0x1e, 0x3e, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x0a, 0x73,  // FSH.o.><.......s
  0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x60,  // _texColor......`
  0x01, 0x00, 0x00, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20,  // ...varying vec2 
  0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x75, 0x6e, 0x69,  // v_texcoord0;.uni
  0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x73,  // form sampler2D s
  0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20,  // _texColor;.void 
  0x6d, 0x61, 0x69, 0x6e, 0x20, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x34,  // main ().{.  vec4
  0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70,  //  tmpvar_1;.  tmp
  0x76, 0x61, 0x72, 0x5f, 0x31, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32,  // var_1 = texture2
  0x44, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x76,  // D (s_texColor, v
  0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x76,  // _texcoord0);.  v
  0x65, 0x63, 0x34, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x3b, 0x0a, 0x20, 0x20,  // ec4 tmpvar_2;.  
  0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x2e, 0x77, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30,  // tmpvar_2.w = 1.0
  0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x2e, 0x78, 0x79, 0x7a,  // ;.  tmpvar_2.xyz
  0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x20, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x30,  //  = max (vec3(0.0
  0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x28, 0x6d, 0x61,  // , 0.0, 0.0), (ma
  0x78, 0x20, 0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x28, 0x6d, 0x61, 0x78, 0x20, 0x28, 0x6d, 0x61,  // x (.    (max (ma
  0x78, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x2e, 0x78, 0x2c, 0x20, 0x74,  // x (tmpvar_1.x, t
  0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x74, 0x6d, 0x70, 0x76,  // mpvar_1.y), tmpv
  0x61, 0x72, 0x5f, 0x31, 0x2e, 0x7a, 0x29, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x0a, 0x20,  // ar_1.z) - 1.0). 
  0x20, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c,  //  , 0.0) * normal
  0x69, 0x7a, 0x65, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x2e, 0x78, 0x79, 0x7a,  // ize(tmpvar_1.xyz
  0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f,  // )));.  gl_FragCo
  0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x3b, 0x0a,  // lor = tmpvar_2;.
  0x7d, 0x0a, 0x0a, 0x00 };                                                                        // = tmpvar_2;.}...
unsigned int fs_bloom_brightpass_bin_glsl_size = 388;

BX_UNUSED(fs_bloom_brightpass_bin_glsl)
BX_UNUSED(fs_bloom_brightpass_bin_glsl_size)
static const uint8_t * fs_bloom_brightpass_bin_dx9 = NULL;
unsigned int fs_bloom_brightpass_bin_dx9_size = 0;

BX_UNUSED(fs_bloom_brightpass_bin_dx9)
BX_UNUSED(fs_bloom_brightpass_bin_dx9_size)
static const uint8_t * fs_bloom_brightpass_bin_dx11 = NULL;
unsigned int fs_bloom_brightpass_bin_dx11_size = 0;

BX_UNUSED(fs_bloom_brightpass_bin_dx11)
BX_UNUSED(fs_bloom_brightpass_bin_dx11_size)
static const uint8_t * fs_bloom_brightpass_bin_metal = NULL;
unsigned int fs_bloom_brightpass_bin_metal_size = 0;

BX_UNUSED(fs_bloom_brightpass_bin_metal)
BX_UNUSED(fs_bloom_brightpass_bin_metal_size)
static const uint8_t * fs_bloom_brightpass_bin_spirv = NULL;
unsigned int fs_bloom_brightpass_bin_spirv_size = 0;

BX_UNUSED(fs_bloom_brightpass_bin_spirv)
BX_UNUSED(fs_bloom_brightpass_bin_spirv_size)
static const uint8_t * fs_bloom_brightpass_bin_esslandroid = NULL;
unsigned int fs_bloom_brightpass_bin_esslandroid_size = 0;

BX_UNUSED(fs_bloom_brightpass_bin_esslandroid)
BX_UNUSED(fs_bloom_brightpass_bin_esslandroid_size)
static const uint8_t * fs_bloom_brightpass_bin_pssl = NULL;
unsigned int fs_bloom_brightpass_bin_pssl_size = 0;

BX_UNUSED(fs_bloom_brightpass_bin_pssl)
BX_UNUSED(fs_bloom_brightpass_bin_pssl_size)
static const uint8_t * fs_bloom_brightpass_bin_esslnacl = NULL;
unsigned int fs_bloom_brightpass_bin_esslnacl_size = 0;

BX_UNUSED(fs_bloom_brightpass_bin_esslnacl)
BX_UNUSED(fs_bloom_brightpass_bin_esslnacl_size)
