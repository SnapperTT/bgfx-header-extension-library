static const uint8_t fs_bloom_blur_hz_bin_glsl[] = {
  0x46, 0x53, 0x48, 0x06, 0x6f, 0x1e, 0x3e, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x0a, 0x73,  // FSH.o.><.......s
  0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x0c,  // _texColor.......
  0x75, 0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x69, 0x7a, 0x65, 0x02, 0x01, 0x00, 0x00,  // u_screenSize....
  0x01, 0x00, 0x9d, 0x06, 0x00, 0x00, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65,  // ......varying ve
  0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a,  // c2 v_texcoord0;.
  0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32,  // uniform sampler2
  0x44, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x75, 0x6e,  // D s_texColor;.un
  0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x73, 0x63, 0x72,  // iform vec4 u_scr
  0x65, 0x65, 0x6e, 0x53, 0x69, 0x7a, 0x65, 0x3b, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61,  // eenSize;.void ma
  0x69, 0x6e, 0x20, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74,  // in ().{.  vec2 t
  0x65, 0x78, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x76,  // ex_offset_1;.  v
  0x65, 0x63, 0x33, 0x20, 0x72, 0x67, 0x62, 0x5f, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x72, 0x67, 0x62,  // ec3 rgb_2;.  rgb
  0x5f, 0x32, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20,  // _2 = (texture2D 
  0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x76, 0x5f, 0x74,  // (s_texColor, v_t
  0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20,  // excoord0).xyz * 
  0x30, 0x2e, 0x31, 0x35, 0x35, 0x30, 0x36, 0x33, 0x37, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x65,  // 0.1550637);.  te
  0x78, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x31, 0x20, 0x3d, 0x20, 0x28, 0x31, 0x2e,  // x_offset_1 = (1.
  0x30, 0x2f, 0x28, 0x75, 0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x69, 0x7a, 0x65, 0x2e,  // 0/(u_screenSize.
  0x78, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x6d, 0x70,  // xy));.  vec2 tmp
  0x76, 0x61, 0x72, 0x5f, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f,  // var_3;.  tmpvar_
  0x33, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70,  // 3.y = 0.0;.  tmp
  0x76, 0x61, 0x72, 0x5f, 0x33, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x6f,  // var_3.x = (tex_o
  0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x31, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x31, 0x2e, 0x34, 0x34,  // ffset_1.x * 1.44
  0x34, 0x34, 0x34, 0x34, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x72, 0x67, 0x62, 0x5f, 0x32, 0x20, 0x3d,  // 4444);.  rgb_2 =
  0x20, 0x28, 0x72, 0x67, 0x62, 0x5f, 0x32, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75,  //  (rgb_2 + (textu
  0x72, 0x65, 0x32, 0x44, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72,  // re2D (s_texColor
  0x2c, 0x20, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x2b,  // , (v_texcoord0 +
  0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20,  //  tmpvar_3)).xyz 
  0x2a, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x39, 0x31, 0x37, 0x38, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20,  // * 0.259178));.  
  0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x3b, 0x0a, 0x20,  // vec2 tmpvar_4;. 
  0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x30, 0x2e,  //  tmpvar_4.y = 0.
  0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x2e, 0x78, 0x20,  // 0;.  tmpvar_4.x 
  0x3d, 0x20, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x31, 0x2e,  // = (tex_offset_1.
  0x78, 0x20, 0x2a, 0x20, 0x31, 0x2e, 0x34, 0x34, 0x34, 0x34, 0x34, 0x34, 0x29, 0x3b, 0x0a, 0x20,  // x * 1.444444);. 
  0x20, 0x72, 0x67, 0x62, 0x5f, 0x32, 0x20, 0x3d, 0x20, 0x28, 0x72, 0x67, 0x62, 0x5f, 0x32, 0x20,  //  rgb_2 = (rgb_2 
  0x2b, 0x20, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x28, 0x73, 0x5f,  // + (texture2D (s_
  0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78,  // texColor, (v_tex
  0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f,  // coord0 - tmpvar_
  0x34, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x39, 0x31,  // 4)).xyz * 0.2591
  0x37, 0x38, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x6d, 0x70,  // 78));.  vec2 tmp
  0x76, 0x61, 0x72, 0x5f, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f,  // var_5;.  tmpvar_
  0x35, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70,  // 5.y = 0.0;.  tmp
  0x76, 0x61, 0x72, 0x5f, 0x35, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x6f,  // var_5.x = (tex_o
  0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x31, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x33, 0x2e, 0x33, 0x37,  // ffset_1.x * 3.37
  0x30, 0x33, 0x37, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x72, 0x67, 0x62, 0x5f, 0x32, 0x20, 0x3d, 0x20,  // 037);.  rgb_2 = 
  0x28, 0x72, 0x67, 0x62, 0x5f, 0x32, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72,  // (rgb_2 + (textur
  0x65, 0x32, 0x44, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c,  // e2D (s_texColor,
  0x20, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x2b, 0x20,  //  (v_texcoord0 + 
  0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a,  // tmpvar_5)).xyz *
  0x20, 0x30, 0x2e, 0x31, 0x32, 0x35, 0x37, 0x37, 0x37, 0x36, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20,  //  0.1257776));.  
  0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x3b, 0x0a, 0x20,  // vec2 tmpvar_6;. 
  0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x30, 0x2e,  //  tmpvar_6.y = 0.
  0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x2e, 0x78, 0x20,  // 0;.  tmpvar_6.x 
  0x3d, 0x20, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x31, 0x2e,  // = (tex_offset_1.
  0x78, 0x20, 0x2a, 0x20, 0x33, 0x2e, 0x33, 0x37, 0x30, 0x33, 0x37, 0x29, 0x3b, 0x0a, 0x20, 0x20,  // x * 3.37037);.  
  0x72, 0x67, 0x62, 0x5f, 0x32, 0x20, 0x3d, 0x20, 0x28, 0x72, 0x67, 0x62, 0x5f, 0x32, 0x20, 0x2b,  // rgb_2 = (rgb_2 +
  0x20, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x28, 0x73, 0x5f, 0x74,  //  (texture2D (s_t
  0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63,  // exColor, (v_texc
  0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36,  // oord0 - tmpvar_6
  0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x31, 0x32, 0x35, 0x37, 0x37,  // )).xyz * 0.12577
  0x37, 0x36, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x6d, 0x70,  // 76));.  vec2 tmp
  0x76, 0x61, 0x72, 0x5f, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f,  // var_7;.  tmpvar_
  0x37, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70,  // 7.y = 0.0;.  tmp
  0x76, 0x61, 0x72, 0x5f, 0x37, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x6f,  // var_7.x = (tex_o
  0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x31, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x35, 0x2e, 0x32, 0x39,  // ffset_1.x * 5.29
  0x36, 0x32, 0x39, 0x36, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x72, 0x67, 0x62, 0x5f, 0x32, 0x20, 0x3d,  // 6296);.  rgb_2 =
  0x20, 0x28, 0x72, 0x67, 0x62, 0x5f, 0x32, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75,  //  (rgb_2 + (textu
  0x72, 0x65, 0x32, 0x44, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72,  // re2D (s_texColor
  0x2c, 0x20, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x2b,  // , (v_texcoord0 +
  0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x37, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20,  //  tmpvar_7)).xyz 
  0x2a, 0x20, 0x30, 0x2e, 0x30, 0x33, 0x33, 0x30, 0x39, 0x39, 0x33, 0x36, 0x29, 0x29, 0x3b, 0x0a,  // * 0.03309936));.
  0x20, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x38, 0x3b,  //   vec2 tmpvar_8;
  0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x38, 0x2e, 0x79, 0x20, 0x3d, 0x20,  // .  tmpvar_8.y = 
  0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x38, 0x2e,  // 0.0;.  tmpvar_8.
  0x78, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f,  // x = (tex_offset_
  0x31, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x35, 0x2e, 0x32, 0x39, 0x36, 0x32, 0x39, 0x36, 0x29, 0x3b,  // 1.x * 5.296296);
  0x0a, 0x20, 0x20, 0x72, 0x67, 0x62, 0x5f, 0x32, 0x20, 0x3d, 0x20, 0x28, 0x72, 0x67, 0x62, 0x5f,  // .  rgb_2 = (rgb_
  0x32, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x28,  // 2 + (texture2D (
  0x73, 0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x28, 0x76, 0x5f, 0x74,  // s_texColor, (v_t
  0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61,  // excoord0 - tmpva
  0x72, 0x5f, 0x38, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x33,  // r_8)).xyz * 0.03
  0x33, 0x30, 0x39, 0x39, 0x33, 0x36, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x32,  // 309936));.  vec2
  0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70,  //  tmpvar_9;.  tmp
  0x76, 0x61, 0x72, 0x5f, 0x39, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x20,  // var_9.y = 0.0;. 
  0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x39, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x28, 0x74,  //  tmpvar_9.x = (t
  0x65, 0x78, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x31, 0x2e, 0x78, 0x20, 0x2a, 0x20,  // ex_offset_1.x * 
  0x37, 0x2e, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x72, 0x67, 0x62,  // 7.222222);.  rgb
  0x5f, 0x32, 0x20, 0x3d, 0x20, 0x28, 0x72, 0x67, 0x62, 0x5f, 0x32, 0x20, 0x2b, 0x20, 0x28, 0x74,  // _2 = (rgb_2 + (t
  0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x43,  // exture2D (s_texC
  0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72,  // olor, (v_texcoor
  0x64, 0x30, 0x20, 0x2b, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x39, 0x29, 0x29, 0x2e,  // d0 + tmpvar_9)).
  0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x34, 0x34, 0x31, 0x33, 0x32, 0x34,  // xyz * 0.00441324
  0x38, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x6d, 0x70, 0x76,  // 8));.  vec2 tmpv
  0x61, 0x72, 0x5f, 0x31, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f,  // ar_10;.  tmpvar_
  0x31, 0x30, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d,  // 10.y = 0.0;.  tm
  0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x30, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x65, 0x78,  // pvar_10.x = (tex
  0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x31, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x37, 0x2e,  // _offset_1.x * 7.
  0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x72, 0x67, 0x62, 0x5f, 0x32,  // 222222);.  rgb_2
  0x20, 0x3d, 0x20, 0x28, 0x72, 0x67, 0x62, 0x5f, 0x32, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x65, 0x78,  //  = (rgb_2 + (tex
  0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c,  // ture2D (s_texCol
  0x6f, 0x72, 0x2c, 0x20, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30,  // or, (v_texcoord0
  0x20, 0x2d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x30, 0x29, 0x29, 0x2e, 0x78,  //  - tmpvar_10)).x
  0x79, 0x7a, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x34, 0x34, 0x31, 0x33, 0x32, 0x34, 0x38,  // yz * 0.004413248
  0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61,  // ));.  vec4 tmpva
  0x72, 0x5f, 0x31, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31,  // r_11;.  tmpvar_1
  0x31, 0x2e, 0x77, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70,  // 1.w = 1.0;.  tmp
  0x76, 0x61, 0x72, 0x5f, 0x31, 0x31, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x3d, 0x20, 0x72, 0x67, 0x62,  // var_11.xyz = rgb
  0x5f, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c,  // _2;.  gl_FragCol
  0x6f, 0x72, 0x20, 0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x31, 0x3b, 0x0a,  // or = tmpvar_11;.
  0x7d, 0x0a, 0x0a, 0x00 };                                                                        //  tmpvar_11;.}...
unsigned int fs_bloom_blur_hz_bin_glsl_size = 1748;

BX_UNUSED(fs_bloom_blur_hz_bin_glsl)
BX_UNUSED(fs_bloom_blur_hz_bin_glsl_size)
static const uint8_t * fs_bloom_blur_hz_bin_dx9 = NULL;
unsigned int fs_bloom_blur_hz_bin_dx9_size = 0;

BX_UNUSED(fs_bloom_blur_hz_bin_dx9)
BX_UNUSED(fs_bloom_blur_hz_bin_dx9_size)
static const uint8_t * fs_bloom_blur_hz_bin_dx11 = NULL;
unsigned int fs_bloom_blur_hz_bin_dx11_size = 0;

BX_UNUSED(fs_bloom_blur_hz_bin_dx11)
BX_UNUSED(fs_bloom_blur_hz_bin_dx11_size)
static const uint8_t * fs_bloom_blur_hz_bin_metal = NULL;
unsigned int fs_bloom_blur_hz_bin_metal_size = 0;

BX_UNUSED(fs_bloom_blur_hz_bin_metal)
BX_UNUSED(fs_bloom_blur_hz_bin_metal_size)
static const uint8_t * fs_bloom_blur_hz_bin_spirv = NULL;
unsigned int fs_bloom_blur_hz_bin_spirv_size = 0;

BX_UNUSED(fs_bloom_blur_hz_bin_spirv)
BX_UNUSED(fs_bloom_blur_hz_bin_spirv_size)
static const uint8_t * fs_bloom_blur_hz_bin_esslandroid = NULL;
unsigned int fs_bloom_blur_hz_bin_esslandroid_size = 0;

BX_UNUSED(fs_bloom_blur_hz_bin_esslandroid)
BX_UNUSED(fs_bloom_blur_hz_bin_esslandroid_size)
static const uint8_t * fs_bloom_blur_hz_bin_pssl = NULL;
unsigned int fs_bloom_blur_hz_bin_pssl_size = 0;

BX_UNUSED(fs_bloom_blur_hz_bin_pssl)
BX_UNUSED(fs_bloom_blur_hz_bin_pssl_size)
static const uint8_t * fs_bloom_blur_hz_bin_esslnacl = NULL;
unsigned int fs_bloom_blur_hz_bin_esslnacl_size = 0;

BX_UNUSED(fs_bloom_blur_hz_bin_esslnacl)
BX_UNUSED(fs_bloom_blur_hz_bin_esslnacl_size)
