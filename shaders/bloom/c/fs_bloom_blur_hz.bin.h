static const uint8_t fs_bloom_blur_hz_bin_glsl[] = {
  0x46, 0x53, 0x48, 0x0b, 0x6f, 0x1e, 0x3e, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x0a, 0x73,  // FSH.o.><.......s
  0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00,  // _texColor.......
  0x00, 0x00, 0x00, 0x0c, 0x75, 0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x69, 0x7a, 0x65,  // ....u_screenSize
  0x02, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9d, 0x06, 0x00, 0x00, 0x76, 0x61,  // ..............va
  0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78,  // rying vec2 v_tex
  0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20,  // coord0;.uniform 
  0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x43,  // sampler2D s_texC
  0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65,  // olor;.uniform ve
  0x63, 0x34, 0x20, 0x75, 0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x69, 0x7a, 0x65, 0x3b,  // c4 u_screenSize;
  0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x20, 0x28, 0x29, 0x0a, 0x7b, 0x0a,  // .void main ().{.
  0x20, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65,  //   vec2 tex_offse
  0x74, 0x5f, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x67, 0x62, 0x5f,  // t_1;.  vec3 rgb_
  0x32, 0x3b, 0x0a, 0x20, 0x20, 0x72, 0x67, 0x62, 0x5f, 0x32, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x65,  // 2;.  rgb_2 = (te
  0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f,  // xture2D (s_texCo
  0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30,  // lor, v_texcoord0
  0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x30, 0x36, 0x33,  // ).xyz * 0.155063
  0x37, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x65, 0x78, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,  // 7);.  tex_offset
  0x5f, 0x31, 0x20, 0x3d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x28, 0x75, 0x5f, 0x73, 0x63, 0x72,  // _1 = (1.0/(u_scr
  0x65, 0x65, 0x6e, 0x53, 0x69, 0x7a, 0x65, 0x2e, 0x78, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20,  // eenSize.xy));.  
  0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x3b, 0x0a, 0x20,  // vec2 tmpvar_3;. 
  0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x30, 0x2e,  //  tmpvar_3.y = 0.
  0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x2e, 0x78, 0x20,  // 0;.  tmpvar_3.x 
  0x3d, 0x20, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x31, 0x2e,  // = (tex_offset_1.
  0x78, 0x20, 0x2a, 0x20, 0x31, 0x2e, 0x34, 0x34, 0x34, 0x34, 0x34, 0x34, 0x29, 0x3b, 0x0a, 0x20,  // x * 1.444444);. 
  0x20, 0x72, 0x67, 0x62, 0x5f, 0x32, 0x20, 0x3d, 0x20, 0x28, 0x72, 0x67, 0x62, 0x5f, 0x32, 0x20,  //  rgb_2 = (rgb_2 
  0x2b, 0x20, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x28, 0x73, 0x5f,  // + (texture2D (s_
  0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78,  // texColor, (v_tex
  0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x2b, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f,  // coord0 + tmpvar_
  0x33, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x39, 0x31,  // 3)).xyz * 0.2591
  0x37, 0x38, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x6d, 0x70,  // 78));.  vec2 tmp
  0x76, 0x61, 0x72, 0x5f, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f,  // var_4;.  tmpvar_
  0x34, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70,  // 4.y = 0.0;.  tmp
  0x76, 0x61, 0x72, 0x5f, 0x34, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x6f,  // var_4.x = (tex_o
  0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x31, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x31, 0x2e, 0x34, 0x34,  // ffset_1.x * 1.44
  0x34, 0x34, 0x34, 0x34, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x72, 0x67, 0x62, 0x5f, 0x32, 0x20, 0x3d,  // 4444);.  rgb_2 =
  0x20, 0x28, 0x72, 0x67, 0x62, 0x5f, 0x32, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75,  //  (rgb_2 + (textu
  0x72, 0x65, 0x32, 0x44, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72,  // re2D (s_texColor
  0x2c, 0x20, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x2d,  // , (v_texcoord0 -
  0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20,  //  tmpvar_4)).xyz 
  0x2a, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x39, 0x31, 0x37, 0x38, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20,  // * 0.259178));.  
  0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x3b, 0x0a, 0x20,  // vec2 tmpvar_5;. 
  0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x30, 0x2e,  //  tmpvar_5.y = 0.
  0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x2e, 0x78, 0x20,  // 0;.  tmpvar_5.x 
  0x3d, 0x20, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x31, 0x2e,  // = (tex_offset_1.
  0x78, 0x20, 0x2a, 0x20, 0x33, 0x2e, 0x33, 0x37, 0x30, 0x33, 0x37, 0x29, 0x3b, 0x0a, 0x20, 0x20,  // x * 3.37037);.  
  0x72, 0x67, 0x62, 0x5f, 0x32, 0x20, 0x3d, 0x20, 0x28, 0x72, 0x67, 0x62, 0x5f, 0x32, 0x20, 0x2b,  // rgb_2 = (rgb_2 +
  0x20, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x28, 0x73, 0x5f, 0x74,  //  (texture2D (s_t
  0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63,  // exColor, (v_texc
  0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x2b, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35,  // oord0 + tmpvar_5
  0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x31, 0x32, 0x35, 0x37, 0x37,  // )).xyz * 0.12577
  0x37, 0x36, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x6d, 0x70,  // 76));.  vec2 tmp
  0x76, 0x61, 0x72, 0x5f, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f,  // var_6;.  tmpvar_
  0x36, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70,  // 6.y = 0.0;.  tmp
  0x76, 0x61, 0x72, 0x5f, 0x36, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x6f,  // var_6.x = (tex_o
  0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x31, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x33, 0x2e, 0x33, 0x37,  // ffset_1.x * 3.37
  0x30, 0x33, 0x37, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x72, 0x67, 0x62, 0x5f, 0x32, 0x20, 0x3d, 0x20,  // 037);.  rgb_2 = 
  0x28, 0x72, 0x67, 0x62, 0x5f, 0x32, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72,  // (rgb_2 + (textur
  0x65, 0x32, 0x44, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c,  // e2D (s_texColor,
  0x20, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x2d, 0x20,  //  (v_texcoord0 - 
  0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a,  // tmpvar_6)).xyz *
  0x20, 0x30, 0x2e, 0x31, 0x32, 0x35, 0x37, 0x37, 0x37, 0x36, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20,  //  0.1257776));.  
  0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x37, 0x3b, 0x0a, 0x20,  // vec2 tmpvar_7;. 
  0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x37, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x30, 0x2e,  //  tmpvar_7.y = 0.
  0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x37, 0x2e, 0x78, 0x20,  // 0;.  tmpvar_7.x 
  0x3d, 0x20, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x31, 0x2e,  // = (tex_offset_1.
  0x78, 0x20, 0x2a, 0x20, 0x35, 0x2e, 0x32, 0x39, 0x36, 0x32, 0x39, 0x36, 0x29, 0x3b, 0x0a, 0x20,  // x * 5.296296);. 
  0x20, 0x72, 0x67, 0x62, 0x5f, 0x32, 0x20, 0x3d, 0x20, 0x28, 0x72, 0x67, 0x62, 0x5f, 0x32, 0x20,  //  rgb_2 = (rgb_2 
  0x2b, 0x20, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x28, 0x73, 0x5f,  // + (texture2D (s_
  0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78,  // texColor, (v_tex
  0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x2b, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f,  // coord0 + tmpvar_
  0x37, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x33, 0x33, 0x30,  // 7)).xyz * 0.0330
  0x39, 0x39, 0x33, 0x36, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74,  // 9936));.  vec2 t
  0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61,  // mpvar_8;.  tmpva
  0x72, 0x5f, 0x38, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74,  // r_8.y = 0.0;.  t
  0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x38, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x65, 0x78,  // mpvar_8.x = (tex
  0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x31, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x35, 0x2e,  // _offset_1.x * 5.
  0x32, 0x39, 0x36, 0x32, 0x39, 0x36, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x72, 0x67, 0x62, 0x5f, 0x32,  // 296296);.  rgb_2
  0x20, 0x3d, 0x20, 0x28, 0x72, 0x67, 0x62, 0x5f, 0x32, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x65, 0x78,  //  = (rgb_2 + (tex
  0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c,  // ture2D (s_texCol
  0x6f, 0x72, 0x2c, 0x20, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30,  // or, (v_texcoord0
  0x20, 0x2d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x38, 0x29, 0x29, 0x2e, 0x78, 0x79,  //  - tmpvar_8)).xy
  0x7a, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x33, 0x33, 0x30, 0x39, 0x39, 0x33, 0x36, 0x29, 0x29,  // z * 0.03309936))
  0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f,  // ;.  vec2 tmpvar_
  0x39, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x39, 0x2e, 0x79, 0x20,  // 9;.  tmpvar_9.y 
  0x3d, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f,  // = 0.0;.  tmpvar_
  0x39, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65,  // 9.x = (tex_offse
  0x74, 0x5f, 0x31, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x37, 0x2e, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32,  // t_1.x * 7.222222
  0x29, 0x3b, 0x0a, 0x20, 0x20, 0x72, 0x67, 0x62, 0x5f, 0x32, 0x20, 0x3d, 0x20, 0x28, 0x72, 0x67,  // );.  rgb_2 = (rg
  0x62, 0x5f, 0x32, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44,  // b_2 + (texture2D
  0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x28, 0x76,  //  (s_texColor, (v
  0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x2b, 0x20, 0x74, 0x6d, 0x70,  // _texcoord0 + tmp
  0x76, 0x61, 0x72, 0x5f, 0x39, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x30, 0x2e,  // var_9)).xyz * 0.
  0x30, 0x30, 0x34, 0x34, 0x31, 0x33, 0x32, 0x34, 0x38, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x76,  // 004413248));.  v
  0x65, 0x63, 0x32, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x30, 0x3b, 0x0a, 0x20,  // ec2 tmpvar_10;. 
  0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x30, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x30,  //  tmpvar_10.y = 0
  0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x30, 0x2e,  // .0;.  tmpvar_10.
  0x78, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x65, 0x78, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f,  // x = (tex_offset_
  0x31, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x37, 0x2e, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x29, 0x3b,  // 1.x * 7.222222);
  0x0a, 0x20, 0x20, 0x72, 0x67, 0x62, 0x5f, 0x32, 0x20, 0x3d, 0x20, 0x28, 0x72, 0x67, 0x62, 0x5f,  // .  rgb_2 = (rgb_
  0x32, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x28,  // 2 + (texture2D (
  0x73, 0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x28, 0x76, 0x5f, 0x74,  // s_texColor, (v_t
  0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61,  // excoord0 - tmpva
  0x72, 0x5f, 0x31, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30,  // r_10)).xyz * 0.0
  0x30, 0x34, 0x34, 0x31, 0x33, 0x32, 0x34, 0x38, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65,  // 04413248));.  ve
  0x63, 0x34, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x31, 0x3b, 0x0a, 0x20, 0x20,  // c4 tmpvar_11;.  
  0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x31, 0x2e, 0x77, 0x20, 0x3d, 0x20, 0x31, 0x2e,  // tmpvar_11.w = 1.
  0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x31, 0x2e, 0x78,  // 0;.  tmpvar_11.x
  0x79, 0x7a, 0x20, 0x3d, 0x20, 0x72, 0x67, 0x62, 0x5f, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x67, 0x6c,  // yz = rgb_2;.  gl
  0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x74, 0x6d, 0x70,  // _FragColor = tmp
  0x76, 0x61, 0x72, 0x5f, 0x31, 0x31, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00 };                        //  tmpvar_11;.}...
unsigned int fs_bloom_blur_hz_bin_glsl_size = 1756;

BX_UNUSED(fs_bloom_blur_hz_bin_glsl)
BX_UNUSED(fs_bloom_blur_hz_bin_glsl_size)
static const uint8_t fs_bloom_blur_hz_bin_dx9[] = {
  0x46, 0x53, 0x48, 0x0b, 0x6f, 0x1e, 0x3e, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x0c, 0x75,  // FSH.o.><.......u
  0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x00, 0x00, 0x00, 0x01,  // _screenSize.....
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72,  // ......s_texColor
  0x30, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x73, 0x5f, 0x74, 0x65, 0x78,  // 0..........s_tex
  0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8c,  // Color0..........
  0x03, 0x00, 0x00, 0x44, 0x58, 0x42, 0x43, 0xba, 0x8c, 0x47, 0xf7, 0x1d, 0x10, 0x34, 0x86, 0xe9,  // ...DXBC..G...4..
  0x3b, 0x6c, 0xac, 0x39, 0x7f, 0x60, 0x23, 0x01, 0x00, 0x00, 0x00, 0x8c, 0x03, 0x00, 0x00, 0x03,  // ;l.9.`#.........
  0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x00, 0x00, 0x49,  // ...,...........I
  0x53, 0x47, 0x4e, 0x50, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x38,  // SGNP...........8
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00,  // ................
  0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // .......D........
  0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x53,  // ...............S
  0x56, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f,  // V_POSITION.TEXCO
  0x4f, 0x52, 0x44, 0x00, 0xab, 0xab, 0xab, 0x4f, 0x53, 0x47, 0x4e, 0x2c, 0x00, 0x00, 0x00, 0x01,  // ORD....OSGN,....
  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ....... ........
  0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x53,  // ...............S
  0x56, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x00, 0xab, 0xab, 0x53, 0x48, 0x44, 0x52, 0xcc,  // V_TARGET...SHDR.
  0x02, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0xb3, 0x00, 0x00, 0x00, 0x35, 0x18, 0x00, 0x00, 0x16,  // ...@.......5....
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xc9, 0x1e, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00,  // ..........>.....
  0x00, 0x00, 0x00, 0x8e, 0xe3, 0xb8, 0x3f, 0xfa, 0xb2, 0x84, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00,  // ......?...>.....
  0x00, 0x00, 0x00, 0x26, 0xb4, 0x57, 0x40, 0xd5, 0xcb, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00,  // ...&.W@...>.....
  0x00, 0x00, 0x00, 0x42, 0x7b, 0xa9, 0x40, 0x31, 0x93, 0x07, 0x3d, 0x00, 0x00, 0x00, 0x00, 0x00,  // ...B{.@1..=.....
  0x00, 0x00, 0x00, 0x72, 0x1c, 0xe7, 0x40, 0x01, 0x9d, 0x90, 0x3b, 0x00, 0x00, 0x00, 0x00, 0x00,  // ...r..@...;.....
  0x00, 0x00, 0x00, 0x59, 0x00, 0x00, 0x04, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,  // ...Y...F. ......
  0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x03, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58,  // ...Z....`......X
  0x18, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, 0x62,  // ....p......UU..b
  0x10, 0x00, 0x03, 0x32, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x03, 0xf2,  // ...2.......e....
  0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x02, 0x05, 0x00, 0x00, 0x00, 0x45,  //  ......h.......E
  0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x10, 0x10, 0x00, 0x01,  // ...........F....
  0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00,  // ...F~.......`...
  0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46,  // ...8...r.......F
  0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x08, 0xc9, 0x1e, 0x3e, 0x08,  // ........@.....>.
  0xc9, 0x1e, 0x3e, 0x08, 0xc9, 0x1e, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x0b, 0x82,  // ..>...>.........
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00,  // ........@.....?.
  0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x0a, 0x80, 0x20, 0x00, 0x00,  // ..?...?...?.. ..
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x22, 0x00, 0x10, 0x00, 0x01,  // .......6..."....
  0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x72,  // ....@......6...r
  0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36,  // .......F.......6
  0x00, 0x00, 0x05, 0x42, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x01,  // ...B........@...
  0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x01, 0x21, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01,  // ...0...!........
  0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x05,  // ...*........@...
  0x00, 0x00, 0x00, 0x03, 0x00, 0x04, 0x03, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38,  // .......:.......8
  0x00, 0x00, 0x08, 0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00,  // ...........:....
  0x00, 0x00, 0x00, 0x0a, 0x90, 0x90, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,  // .......*........
  0x00, 0x00, 0x07, 0x32, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x01,  // ...2.......F....
  0x00, 0x00, 0x00, 0x46, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x09, 0xf2,  // ...F.......E....
  0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46,  // .......F.......F
  0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32,  // ~.......`......2
  0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03,  // ...r.......F....
  0x00, 0x00, 0x00, 0x56, 0x95, 0x90, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46,  // ...V...*.......F
  0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x92, 0x00, 0x10, 0x00, 0x01,  // ................
  0x00, 0x00, 0x00, 0x06, 0x04, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06,  // .......A........
  0x14, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 0x04,  // .......E........
  0x00, 0x00, 0x00, 0xc6, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00,  // ...........F~...
  0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72,  // ....`......2...r
  0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x56,  // .......F.......V
  0x95, 0x90, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03,  // ...*.......F....
  0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2a,  // .......B.......*
  0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x16,  // ........@.......
  0x00, 0x00, 0x01, 0x36, 0x00, 0x00, 0x05, 0x72, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46,  // ...6...r ......F
  0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x82, 0x20, 0x10, 0x00, 0x00,  // .......6.... ...
  0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x3e, 0x00, 0x00, 0x01, 0x00,  // ....@.....?>....
  0x00, 0x10, 0x00 };                                                                              // .@.....?>.......
unsigned int fs_bloom_blur_hz_bin_dx9_size = 995;

BX_UNUSED(fs_bloom_blur_hz_bin_dx9)
BX_UNUSED(fs_bloom_blur_hz_bin_dx9_size)
static const uint8_t fs_bloom_blur_hz_bin_dx11[] = {
  0x46, 0x53, 0x48, 0x0b, 0x6f, 0x1e, 0x3e, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x0c, 0x75,  // FSH.o.><.......u
  0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x00, 0x00, 0x00, 0x01,  // _screenSize.....
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72,  // ......s_texColor
  0x30, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x73, 0x5f, 0x74, 0x65, 0x78,  // 0..........s_tex
  0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa8,  // Color0..........
  0x03, 0x00, 0x00, 0x44, 0x58, 0x42, 0x43, 0xf6, 0x3b, 0x8c, 0x7d, 0x9d, 0x55, 0xde, 0x1e, 0x82,  // ...DXBC.;.}.U...
  0x19, 0x6e, 0x93, 0x78, 0x5a, 0xe4, 0x7e, 0x01, 0x00, 0x00, 0x00, 0xa8, 0x03, 0x00, 0x00, 0x03,  // .n.xZ.~.........
  0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x00, 0x00, 0x49,  // ...,...........I
  0x53, 0x47, 0x4e, 0x50, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x38,  // SGNP...........8
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00,  // ................
  0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // .......D........
  0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x53,  // ...............S
  0x56, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f,  // V_POSITION.TEXCO
  0x4f, 0x52, 0x44, 0x00, 0xab, 0xab, 0xab, 0x4f, 0x53, 0x47, 0x4e, 0x2c, 0x00, 0x00, 0x00, 0x01,  // ORD....OSGN,....
  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ....... ........
  0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x53,  // ...............S
  0x56, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x00, 0xab, 0xab, 0x53, 0x48, 0x45, 0x58, 0xe8,  // V_TARGET...SHEX.
  0x02, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0xba, 0x00, 0x00, 0x00, 0x6a, 0x08, 0x00, 0x01, 0x35,  // ...P.......j...5
  0x18, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xc9, 0x1e, 0x3e, 0x00,  // ..............>.
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8e, 0xe3, 0xb8, 0x3f, 0xfa, 0xb2, 0x84, 0x3e, 0x00,  // ..........?...>.
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0xb4, 0x57, 0x40, 0xd5, 0xcb, 0x00, 0x3e, 0x00,  // .......&.W@...>.
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x7b, 0xa9, 0x40, 0x31, 0x93, 0x07, 0x3d, 0x00,  // .......B{.@1..=.
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x72, 0x1c, 0xe7, 0x40, 0x01, 0x9d, 0x90, 0x3b, 0x00,  // .......r..@...;.
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x59, 0x00, 0x00, 0x04, 0x46, 0x8e, 0x20, 0x00, 0x00,  // .......Y...F. ..
  0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x03, 0x00, 0x60, 0x10, 0x00, 0x00,  // .......Z....`...
  0x00, 0x00, 0x00, 0x58, 0x18, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55,  // ...X....p......U
  0x55, 0x00, 0x00, 0x62, 0x10, 0x00, 0x03, 0x32, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x65,  // U..b...2.......e
  0x00, 0x00, 0x03, 0xf2, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x02, 0x05,  // .... ......h....
  0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x8b, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72,  // ...E.......CU..r
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46,  // .......F.......F
  0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38,  // ~.......`......8
  0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00,  // ...r.......F....
  0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x08, 0xc9, 0x1e, 0x3e, 0x08, 0xc9, 0x1e, 0x3e, 0x08,  // ....@.....>...>.
  0xc9, 0x1e, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x0b, 0x82, 0x00, 0x10, 0x00, 0x00,  // ..>.............
  0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x00,  // ....@.....?...?.
  0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x0a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ..?...?.. ......
  0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x22, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01,  // ...6..."........
  0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x72, 0x00, 0x10, 0x00, 0x02,  // @......6...r....
  0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x42,  // ...F.......6...B
  0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x30,  // ........@......0
  0x00, 0x00, 0x01, 0x21, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2a,  // ...!...........*
  0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x03,  // ........@.......
  0x00, 0x04, 0x03, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x12,  // ...:.......8....
  0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a,  // .......:........
  0x90, 0x90, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x32,  // ...*...........2
  0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46,  // .......F.......F
  0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x8b, 0xc2, 0x00, 0x00, 0x80, 0x43,  // .......E.......C
  0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x03,  // U..r.......F....
  0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00,  // ...F~.......`...
  0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46,  // ...2...r.......F
  0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x56, 0x95, 0x90, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x01,  // .......V...*....
  0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x92,  // ...F............
  0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x04, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x01,  // ...........A....
  0x00, 0x00, 0x00, 0x06, 0x14, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x8b, 0xc2,  // ...........E....
  0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xc6,  // ...CU..r........
  0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // .......F~.......
  0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x02,  // `......2...r....
  0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x56, 0x95, 0x90, 0x00, 0x2a,  // ...F.......V...*
  0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x1e,  // .......F........
  0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x01,  // ...B.......*....
  0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x01, 0x36,  // ....@..........6
  0x00, 0x00, 0x05, 0x72, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02,  // ...r ......F....
  0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x82, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,  // ...6.... .......
  0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x3e, 0x00, 0x00, 0x01, 0x00, 0x00, 0x10, 0x00 };      // .@.....?>.......
unsigned int fs_bloom_blur_hz_bin_dx11_size = 1023;

BX_UNUSED(fs_bloom_blur_hz_bin_dx11)
BX_UNUSED(fs_bloom_blur_hz_bin_dx11_size)
static const uint8_t fs_bloom_blur_hz_bin_metal[] = {
  0x46, 0x53, 0x48, 0x0b, 0x6f, 0x1e, 0x3e, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x11, 0x73,  // FSH.o.><.......s
  0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72,  // _texColorSampler
  0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x73, 0x5f, 0x74, 0x65, 0x78,  // ...........s_tex
  0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff,  // ColorTexture....
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x75, 0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x53,  // .......u_screenS
  0x69, 0x7a, 0x65, 0x12, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x73, 0x5f,  // ize...........s_
  0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // texColor........
  0x00, 0x00, 0x5d, 0x09, 0x00, 0x00, 0x23, 0x70, 0x72, 0x61, 0x67, 0x6d, 0x61, 0x20, 0x63, 0x6c,  // ..]...#pragma cl
  0x61, 0x6e, 0x67, 0x20, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x20, 0x69,  // ang diagnostic i
  0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x20, 0x22, 0x2d, 0x57, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e,  // gnored "-Wmissin
  0x67, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x22, 0x0a, 0x23, 0x70,  // g-prototypes".#p
  0x72, 0x61, 0x67, 0x6d, 0x61, 0x20, 0x63, 0x6c, 0x61, 0x6e, 0x67, 0x20, 0x64, 0x69, 0x61, 0x67,  // ragma clang diag
  0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x20, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x20, 0x22,  // nostic ignored "
  0x2d, 0x57, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x2d, 0x62, 0x72, 0x61, 0x63, 0x65, 0x73,  // -Wmissing-braces
  0x22, 0x0a, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65, 0x74,  // "..#include <met
  0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c,  // al_stdlib>.#incl
  0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, 0x68,  // ude <simd/simd.h
  0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,  // >..using namespa
  0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c,  // ce metal;..templ
  0x61, 0x74, 0x65, 0x3c, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x54, 0x2c, 0x20,  // ate<typename T, 
  0x73, 0x69, 0x7a, 0x65, 0x5f, 0x74, 0x20, 0x4e, 0x75, 0x6d, 0x3e, 0x0a, 0x73, 0x74, 0x72, 0x75,  // size_t Num>.stru
  0x63, 0x74, 0x20, 0x73, 0x70, 0x76, 0x55, 0x6e, 0x73, 0x61, 0x66, 0x65, 0x41, 0x72, 0x72, 0x61,  // ct spvUnsafeArra
  0x79, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x54, 0x20, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e,  // y.{.    T elemen
  0x74, 0x73, 0x5b, 0x4e, 0x75, 0x6d, 0x20, 0x3f, 0x20, 0x4e, 0x75, 0x6d, 0x20, 0x3a, 0x20, 0x31,  // ts[Num ? Num : 1
  0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x68, 0x72, 0x65,  // ];.    .    thre
  0x61, 0x64, 0x20, 0x54, 0x26, 0x20, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x5b,  // ad T& operator [
  0x5d, 0x20, 0x28, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x74, 0x20, 0x70, 0x6f, 0x73, 0x29, 0x20, 0x74,  // ] (size_t pos) t
  0x68, 0x72, 0x65, 0x61, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20,  // hread.    {.    
  0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x65, 0x6c, 0x65, 0x6d, 0x65,  //     return eleme
  0x6e, 0x74, 0x73, 0x5b, 0x70, 0x6f, 0x73, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a,  // nts[pos];.    }.
  0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x78, 0x70, 0x72, 0x20, 0x63, 0x6f,  //     constexpr co
  0x6e, 0x73, 0x74, 0x20, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x20, 0x54, 0x26, 0x20, 0x6f, 0x70,  // nst thread T& op
  0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x5b, 0x5d, 0x20, 0x28, 0x73, 0x69, 0x7a, 0x65, 0x5f,  // erator [] (size_
  0x74, 0x20, 0x70, 0x6f, 0x73, 0x29, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x74, 0x68, 0x72,  // t pos) const thr
  0x65, 0x61, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // ead.    {.      
  0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,  //   return element
  0x73, 0x5b, 0x70, 0x6f, 0x73, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20,  // s[pos];.    }.  
  0x20, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x20, 0x54, 0x26,  //   .    device T&
  0x20, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x5b, 0x5d, 0x20, 0x28, 0x73, 0x69,  //  operator [] (si
  0x7a, 0x65, 0x5f, 0x74, 0x20, 0x70, 0x6f, 0x73, 0x29, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,  // ze_t pos) device
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x72,  // .    {.        r
  0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5b, 0x70,  // eturn elements[p
  0x6f, 0x73, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x63,  // os];.    }.    c
  0x6f, 0x6e, 0x73, 0x74, 0x65, 0x78, 0x70, 0x72, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x64,  // onstexpr const d
  0x65, 0x76, 0x69, 0x63, 0x65, 0x20, 0x54, 0x26, 0x20, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,  // evice T& operato
  0x72, 0x20, 0x5b, 0x5d, 0x20, 0x28, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x74, 0x20, 0x70, 0x6f, 0x73,  // r [] (size_t pos
  0x29, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x0a, 0x20,  // ) const device. 
  0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74,  //    {.        ret
  0x75, 0x72, 0x6e, 0x20, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5b, 0x70, 0x6f, 0x73,  // urn elements[pos
  0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x0a, 0x20, 0x20,  // ];.    }.    .  
  0x20, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x78, 0x70, 0x72, 0x20, 0x63, 0x6f, 0x6e, 0x73,  //   constexpr cons
  0x74, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x54, 0x26, 0x20, 0x6f, 0x70,  // t constant T& op
  0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x5b, 0x5d, 0x20, 0x28, 0x73, 0x69, 0x7a, 0x65, 0x5f,  // erator [] (size_
  0x74, 0x20, 0x70, 0x6f, 0x73, 0x29, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x63, 0x6f, 0x6e,  // t pos) const con
  0x73, 0x74, 0x61, 0x6e, 0x74, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20,  // stant.    {.    
  0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x65, 0x6c, 0x65, 0x6d, 0x65,  //     return eleme
  0x6e, 0x74, 0x73, 0x5b, 0x70, 0x6f, 0x73, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a,  // nts[pos];.    }.
  0x20, 0x20, 0x20, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x67,  //     .    threadg
  0x72, 0x6f, 0x75, 0x70, 0x20, 0x54, 0x26, 0x20, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,  // roup T& operator
  0x20, 0x5b, 0x5d, 0x20, 0x28, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x74, 0x20, 0x70, 0x6f, 0x73, 0x29,  //  [] (size_t pos)
  0x20, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x0a, 0x20, 0x20, 0x20,  //  threadgroup.   
  0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72,  //  {.        retur
  0x6e, 0x20, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5b, 0x70, 0x6f, 0x73, 0x5d, 0x3b,  // n elements[pos];
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74,  // .    }.    const
  0x65, 0x78, 0x70, 0x72, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x74, 0x68, 0x72, 0x65, 0x61,  // expr const threa
  0x64, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x20, 0x54, 0x26, 0x20, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,  // dgroup T& operat
  0x6f, 0x72, 0x20, 0x5b, 0x5d, 0x20, 0x28, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x74, 0x20, 0x70, 0x6f,  // or [] (size_t po
  0x73, 0x29, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x67,  // s) const threadg
  0x72, 0x6f, 0x75, 0x70, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20,  // roup.    {.     
  0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e,  //    return elemen
  0x74, 0x73, 0x5b, 0x70, 0x6f, 0x73, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x7d,  // ts[pos];.    }.}
  0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61,  // ;..struct _Globa
  0x6c, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75,  // l.{.    float4 u
  0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x69, 0x7a, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a,  // _screenSize;.};.
  0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x73, 0x70, 0x76, 0x55, 0x6e, 0x73,  // .constant spvUns
  0x61, 0x66, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x2c, 0x20,  // afeArray<float, 
  0x35, 0x3e, 0x20, 0x5f, 0x31, 0x31, 0x31, 0x20, 0x3d, 0x20, 0x73, 0x70, 0x76, 0x55, 0x6e, 0x73,  // 5> _111 = spvUns
  0x61, 0x66, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x2c, 0x20,  // afeArray<float, 
  0x35, 0x3e, 0x28, 0x7b, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x34, 0x34, 0x34, 0x34,  // 5>({ 0.0, 1.4444
  0x34, 0x34, 0x34, 0x31, 0x37, 0x39, 0x35, 0x33, 0x34, 0x39, 0x31, 0x32, 0x31, 0x30, 0x39, 0x33,  // 4441795349121093
  0x37, 0x35, 0x2c, 0x20, 0x33, 0x2e, 0x33, 0x37, 0x30, 0x33, 0x37, 0x30, 0x33, 0x38, 0x38, 0x30,  // 75, 3.3703703880
  0x33, 0x31, 0x30, 0x30, 0x35, 0x38, 0x35, 0x39, 0x33, 0x37, 0x35, 0x2c, 0x20, 0x35, 0x2e, 0x32,  // 31005859375, 5.2
  0x39, 0x36, 0x32, 0x39, 0x36, 0x31, 0x31, 0x39, 0x36, 0x38, 0x39, 0x39, 0x34, 0x31, 0x34, 0x30,  // 9629611968994140
  0x36, 0x32, 0x35, 0x2c, 0x20, 0x37, 0x2e, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x33, 0x32, 0x38,  // 625, 7.222222328
  0x31, 0x38, 0x36, 0x30, 0x33, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x20, 0x7d, 0x29, 0x3b, 0x0a,  // 18603515625 });.
  0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x73, 0x70, 0x76, 0x55, 0x6e, 0x73, 0x61,  // constant spvUnsa
  0x66, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x2c, 0x20, 0x35,  // feArray<float, 5
  0x3e, 0x20, 0x5f, 0x31, 0x32, 0x39, 0x20, 0x3d, 0x20, 0x73, 0x70, 0x76, 0x55, 0x6e, 0x73, 0x61,  // > _129 = spvUnsa
  0x66, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x2c, 0x20, 0x35,  // feArray<float, 5
  0x3e, 0x28, 0x7b, 0x20, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x30, 0x36, 0x33, 0x37, 0x34, 0x38, 0x33,  // >({ 0.1550637483
  0x35, 0x39, 0x36, 0x38, 0x30, 0x31, 0x37, 0x35, 0x37, 0x38, 0x31, 0x32, 0x35, 0x2c, 0x20, 0x30,  // 5968017578125, 0
  0x2e, 0x32, 0x35, 0x39, 0x31, 0x37, 0x37, 0x39, 0x38, 0x32, 0x38, 0x30, 0x37, 0x31, 0x35, 0x39,  // .259177982807159
  0x34, 0x32, 0x33, 0x38, 0x32, 0x38, 0x31, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x32, 0x35,  // 423828125, 0.125
  0x37, 0x37, 0x37, 0x35, 0x35, 0x37, 0x34, 0x39, 0x32, 0x32, 0x35, 0x36, 0x31, 0x36, 0x34, 0x35,  // 7775574922561645
  0x35, 0x30, 0x37, 0x38, 0x31, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x33, 0x33, 0x30, 0x39,  // 5078125, 0.03309
  0x39, 0x33, 0x35, 0x37, 0x30, 0x33, 0x38, 0x37, 0x33, 0x36, 0x33, 0x34, 0x33, 0x33, 0x38, 0x33,  // 9357038736343383
  0x37, 0x38, 0x39, 0x30, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x34, 0x34, 0x31,  // 7890625, 0.00441
  0x33, 0x32, 0x34, 0x37, 0x35, 0x37, 0x34, 0x31, 0x32, 0x30, 0x37, 0x35, 0x39, 0x39, 0x36, 0x33,  // 3247574120759963
  0x39, 0x38, 0x39, 0x32, 0x35, 0x37, 0x38, 0x31, 0x32, 0x35, 0x20, 0x7d, 0x29, 0x3b, 0x0a, 0x0a,  // 9892578125 });..
  0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61,  // struct xlatMtlMa
  0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f,  // in_out.{.    flo
  0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74,  // at4 bgfx_FragDat
  0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x3b,  // a0 [[color(0)]];
  0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74,  // .};..struct xlat
  0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20,  // MtlMain_in.{.   
  0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f,  //  float2 v_texcoo
  0x72, 0x64, 0x30, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x30,  // rd0 [[user(locn0
  0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e,  // )]];.};..fragmen
  0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75,  // t xlatMtlMain_ou
  0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, 0x78, 0x6c,  // t xlatMtlMain(xl
  0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, 0x69, 0x6e, 0x20,  // atMtlMain_in in 
  0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, 0x20, 0x63, 0x6f,  // [[stage_in]], co
  0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x26, 0x20,  // nstant _Global& 
  0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x28,  // _mtl_u [[buffer(
  0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c,  // 0)]], texture2d<
  0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f,  // float> s_texColo
  0x72, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x30, 0x29, 0x5d, 0x5d,  // r [[texture(0)]]
  0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x43,  // , sampler s_texC
  0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61,  // olorSampler [[sa
  0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20,  // mpler(0)]]).{.  
  0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75,  //   xlatMtlMain_ou
  0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20,  // t out = {};.    
  0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c,  // float2 _230 = fl
  0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x5f, 0x6d, 0x74, 0x6c,  // oat2(1.0) / _mtl
  0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x69, 0x7a, 0x65, 0x2e,  // _u.u_screenSize.
  0x78, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f,  // xy;.    float3 _
  0x33, 0x33, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x33, 0x32, 0x20, 0x3d, 0x20,  // 332;.    _332 = 
  0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x73, 0x61, 0x6d, 0x70,  // (s_texColor.samp
  0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x61, 0x6d,  // le(s_texColorSam
  0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f,  // pler, in.v_texco
  0x6f, 0x72, 0x64, 0x30, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x31, 0x2e, 0x30, 0x29,  // ord0).xyz * 1.0)
  0x20, 0x2a, 0x20, 0x30, 0x2e, 0x31, 0x35, 0x35, 0x30, 0x36, 0x33, 0x37, 0x34, 0x38, 0x33, 0x35,  //  * 0.15506374835
  0x39, 0x36, 0x38, 0x30, 0x31, 0x37, 0x35, 0x37, 0x38, 0x31, 0x32, 0x35, 0x3b, 0x0a, 0x20, 0x20,  // 968017578125;.  
  0x20, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x33, 0x33, 0x31, 0x20,  //   for (int _331 
  0x3d, 0x20, 0x31, 0x3b, 0x20, 0x5f, 0x33, 0x33, 0x31, 0x20, 0x3c, 0x20, 0x35, 0x3b, 0x20, 0x29,  // = 1; _331 < 5; )
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f,  // .    {.        _
  0x33, 0x33, 0x32, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x33, 0x33, 0x32, 0x20, 0x2b, 0x20, 0x28, 0x73,  // 332 = (_332 + (s
  0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65,  // _texColor.sample
  0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c,  // (s_texColorSampl
  0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f,  // er, (in.v_texcoo
  0x72, 0x64, 0x30, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x32, 0x33,  // rd0 + float2(_23
  0x30, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x31, 0x31, 0x5b, 0x5f, 0x33, 0x33, 0x31, 0x5d,  // 0.x * _111[_331]
  0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f,  // , 0.0))).xyz * _
  0x31, 0x32, 0x39, 0x5b, 0x5f, 0x33, 0x33, 0x31, 0x5d, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x73,  // 129[_331])) + (s
  0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65,  // _texColor.sample
  0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c,  // (s_texColorSampl
  0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f,  // er, (in.v_texcoo
  0x72, 0x64, 0x30, 0x20, 0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x32, 0x33,  // rd0 - float2(_23
  0x30, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x31, 0x31, 0x5b, 0x5f, 0x33, 0x33, 0x31, 0x5d,  // 0.x * _111[_331]
  0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f,  // , 0.0))).xyz * _
  0x31, 0x32, 0x39, 0x5b, 0x5f, 0x33, 0x33, 0x31, 0x5d, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20,  // 129[_331]);.    
  0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x33, 0x31, 0x2b, 0x2b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20,  //     _331++;.    
  0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x3b, 0x0a, 0x20, 0x20,  //     continue;.  
  0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x62, 0x67, 0x66, 0x78,  //   }.    out.bgfx
  0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f,  // _FragData0 = flo
  0x61, 0x74, 0x34, 0x28, 0x5f, 0x33, 0x33, 0x32, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a,  // at4(_332, 1.0);.
  0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a,  //     return out;.
  0x7d, 0x0a, 0x0a, 0x00, 0x00, 0x30, 0x00 };                                                      // urn out;.}....0.
unsigned int fs_bloom_blur_hz_bin_metal_size = 2519;

BX_UNUSED(fs_bloom_blur_hz_bin_metal)
BX_UNUSED(fs_bloom_blur_hz_bin_metal_size)
static const uint8_t fs_bloom_blur_hz_bin_spirv[] = {
  0x46, 0x53, 0x48, 0x0b, 0x6f, 0x1e, 0x3e, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x0c, 0x75,  // FSH.o.><.......u
  0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x00, 0x00, 0x00, 0x01,  // _screenSize.....
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72,  // ......s_texColor
  0x30, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x02, 0x1a, 0x00, 0x4c, 0x09, 0x00, 0x00, 0x03, 0x02,  // 0.........L.....
  0x23, 0x07, 0x00, 0x00, 0x01, 0x00, 0x0a, 0x00, 0x08, 0x00, 0x4d, 0x01, 0x00, 0x00, 0x00, 0x00,  // #.........M.....
  0x00, 0x00, 0x11, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x06, 0x00, 0x01, 0x00,  // ................
  0x00, 0x00, 0x47, 0x4c, 0x53, 0x4c, 0x2e, 0x73, 0x74, 0x64, 0x2e, 0x34, 0x35, 0x30, 0x00, 0x00,  // ..GLSL.std.450..
  0x00, 0x00, 0x0e, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, 0x00,  // ................
  0x07, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00,  // ..........main..
  0x00, 0x00, 0xac, 0x00, 0x00, 0x00, 0xb7, 0x00, 0x00, 0x00, 0x10, 0x00, 0x03, 0x00, 0x04, 0x00,  // ................
  0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x05, 0x00, 0x00, 0x00, 0xf4, 0x01,  // ................
  0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00,  // ..........main..
  0x00, 0x00, 0x05, 0x00, 0x07, 0x00, 0x22, 0x00, 0x00, 0x00, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x43,  // ......"...s_texC
  0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x00, 0x05, 0x00,  // olorSampler.....
  0x07, 0x00, 0x25, 0x00, 0x00, 0x00, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72,  // ..%...s_texColor
  0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0x50, 0x00,  // Texture.......P.
  0x00, 0x00, 0x55, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x00, 0x00,  // ..UniformBlock..
  0x00, 0x00, 0x06, 0x00, 0x07, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x75, 0x5f,  // ......P.......u_
  0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x69, 0x7a, 0x65, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00,  // screenSize......
  0x03, 0x00, 0x52, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00, 0xac, 0x00,  // ..R.............
  0x00, 0x00, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x00, 0x05, 0x00,  // ..v_texcoord0...
  0x06, 0x00, 0xb7, 0x00, 0x00, 0x00, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44,  // ......bgfx_FragD
  0x61, 0x74, 0x61, 0x30, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x22, 0x00, 0x00, 0x00, 0x22, 0x00,  // ata0..G..."...".
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x22, 0x00, 0x00, 0x00, 0x21, 0x00,  // ......G..."...!.
  0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x25, 0x00, 0x00, 0x00, 0x22, 0x00,  // ......G...%...".
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x25, 0x00, 0x00, 0x00, 0x21, 0x00,  // ......G...%...!.
  0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00,  // ......H...P.....
  0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x03, 0x00, 0x50, 0x00,  // ..#.......G...P.
  0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x52, 0x00, 0x00, 0x00, 0x22, 0x00,  // ......G...R...".
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x52, 0x00, 0x00, 0x00, 0x21, 0x00,  // ......G...R...!.
  0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xac, 0x00, 0x00, 0x00, 0x1e, 0x00,  // ......G.........
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xb7, 0x00, 0x00, 0x00, 0x1e, 0x00,  // ......G.........
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00, 0x21, 0x00,  // ..............!.
  0x03, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x02, 0x00, 0x06, 0x00,  // ................
  0x00, 0x00, 0x16, 0x00, 0x03, 0x00, 0x07, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x19, 0x00,  // .......... .....
  0x09, 0x00, 0x08, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,  // ................
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,  // ................
  0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02, 0x00,  // ................
  0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x04, 0x00,  // ................
  0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00,  // .. .............
  0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00,  // .. ...!.........
  0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x21, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00,  // ..;...!...".....
  0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,  // .. ...$.........
  0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x24, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x00, 0x00,  // ..;...$...%.....
  0x00, 0x00, 0x15, 0x00, 0x04, 0x00, 0x28, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x01, 0x00,  // ......(... .....
  0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x28, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x01, 0x00,  // ..+...(...).....
  0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x28, 0x00, 0x00, 0x00, 0x2d, 0x00, 0x00, 0x00, 0x00, 0x00,  // ..+...(...-.....
  0x00, 0x00, 0x1b, 0x00, 0x03, 0x00, 0x31, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2b, 0x00,  // ......1.......+.
  0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00,  // ......?.........
  0x04, 0x00, 0x42, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2b, 0x00,  // ..B...........+.
  0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x2b, 0x00,  // ......E......?+.
  0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4d, 0x00, 0x00, 0x00, 0x08, 0xc9, 0x1e, 0x3e, 0x1e, 0x00,  // ......M......>..
  0x03, 0x00, 0x50, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x51, 0x00,  // ..P....... ...Q.
  0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x51, 0x00,  // ......P...;...Q.
  0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x53, 0x00,  // ..R....... ...S.
  0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x28, 0x00,  // ..........+...(.
  0x00, 0x00, 0x61, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x62, 0x00,  // ..a...........b.
  0x00, 0x00, 0x15, 0x00, 0x04, 0x00, 0x65, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00,  // ......e... .....
  0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x65, 0x00, 0x00, 0x00, 0x69, 0x00, 0x00, 0x00, 0x05, 0x00,  // ..+...e...i.....
  0x00, 0x00, 0x1c, 0x00, 0x04, 0x00, 0x6a, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x69, 0x00,  // ......j.......i.
  0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x6b, 0x00, 0x00, 0x00, 0x8e, 0xe3,  // ..+.......k.....
  0xb8, 0x3f, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x26, 0xb4,  // .?+.......l...&.
  0x57, 0x40, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x6d, 0x00, 0x00, 0x00, 0x42, 0x7b,  // W@+.......m...B{
  0xa9, 0x40, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x00, 0x00, 0x72, 0x1c,  // .@+.......n...r.
  0xe7, 0x40, 0x2c, 0x00, 0x08, 0x00, 0x6a, 0x00, 0x00, 0x00, 0x6f, 0x00, 0x00, 0x00, 0x3f, 0x00,  // .@,...j...o...?.
  0x00, 0x00, 0x6b, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x6d, 0x00, 0x00, 0x00, 0x6e, 0x00,  // ..k...l...m...n.
  0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x71, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x6a, 0x00,  // .. ...q.......j.
  0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7d, 0x00, 0x00, 0x00, 0xfa, 0xb2,  // ..+.......}.....
  0x84, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0xd5, 0xcb,  // .>+.......~.....
  0x00, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x31, 0x93,  // .>+...........1.
  0x07, 0x3d, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x01, 0x9d,  // .=+.............
  0x90, 0x3b, 0x2c, 0x00, 0x08, 0x00, 0x6a, 0x00, 0x00, 0x00, 0x81, 0x00, 0x00, 0x00, 0x4d, 0x00,  // .;,...j.......M.
  0x00, 0x00, 0x7d, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x80, 0x00,  // ..}...~.........
  0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0xab, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00,  // .. .............
  0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0xab, 0x00, 0x00, 0x00, 0xac, 0x00, 0x00, 0x00, 0x01, 0x00,  // ..;.............
  0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0xb6, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x00,  // .. .............
  0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0xb6, 0x00, 0x00, 0x00, 0xb7, 0x00, 0x00, 0x00, 0x03, 0x00,  // ..;.............
  0x00, 0x00, 0x2c, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x4a, 0x01, 0x00, 0x00, 0x45, 0x00,  // ..,.......J...E.
  0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x36, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00,  // ..E...6.........
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x05, 0x00,  // ................
  0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x71, 0x00, 0x00, 0x00, 0xd2, 0x00, 0x00, 0x00, 0x07, 0x00,  // ..;...q.........
  0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x71, 0x00, 0x00, 0x00, 0xd5, 0x00, 0x00, 0x00, 0x07, 0x00,  // ..;...q.........
  0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x71, 0x00, 0x00, 0x00, 0xd6, 0x00, 0x00, 0x00, 0x07, 0x00,  // ..;...q.........
  0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x71, 0x00, 0x00, 0x00, 0xd9, 0x00, 0x00, 0x00, 0x07, 0x00,  // ..;...q.........
  0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x22, 0x00,  // ..=.......#...".
  0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x25, 0x00,  // ..=.......&...%.
  0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xad, 0x00, 0x00, 0x00, 0xac, 0x00,  // ..=.............
  0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x31, 0x00, 0x00, 0x00, 0x26, 0x01, 0x00, 0x00, 0x26, 0x00,  // ..V...1...&...&.
  0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x28, 0x01,  // ..#...W.......(.
  0x00, 0x00, 0x26, 0x01, 0x00, 0x00, 0xad, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x42, 0x00,  // ..&.......O...B.
  0x00, 0x00, 0xdf, 0x00, 0x00, 0x00, 0x28, 0x01, 0x00, 0x00, 0x28, 0x01, 0x00, 0x00, 0x00, 0x00,  // ......(...(.....
  0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x42, 0x00,  // ..............B.
  0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0xdf, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x8e, 0x00,  // ..........E.....
  0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0xe1, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x4d, 0x00,  // ..B...........M.
  0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x53, 0x00, 0x00, 0x00, 0xe2, 0x00, 0x00, 0x00, 0x52, 0x00,  // ..A...S.......R.
  0x00, 0x00, 0x2d, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xe3, 0x00,  // ..-...=.........
  0x00, 0x00, 0xe2, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x07, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xe4, 0x00,  // ......O.........
  0x00, 0x00, 0xe3, 0x00, 0x00, 0x00, 0xe3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,  // ................
  0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xe6, 0x00, 0x00, 0x00, 0x4a, 0x01,  // ..............J.
  0x00, 0x00, 0xe4, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xe7, 0x00, 0x00, 0x00, 0xf8, 0x00,  // ................
  0x02, 0x00, 0xe7, 0x00, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x42, 0x00, 0x00, 0x00, 0x4c, 0x01,  // ..........B...L.
  0x00, 0x00, 0xe1, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x0f, 0x01, 0x00, 0x00, 0xeb, 0x00,  // ................
  0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x28, 0x00, 0x00, 0x00, 0x4b, 0x01, 0x00, 0x00, 0x29, 0x00,  // ......(...K...).
  0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x12, 0x01, 0x00, 0x00, 0xeb, 0x00, 0x00, 0x00, 0xb1, 0x00,  // ................
  0x05, 0x00, 0x62, 0x00, 0x00, 0x00, 0xea, 0x00, 0x00, 0x00, 0x4b, 0x01, 0x00, 0x00, 0x61, 0x00,  // ..b.......K...a.
  0x00, 0x00, 0xf6, 0x00, 0x04, 0x00, 0x13, 0x01, 0x00, 0x00, 0xeb, 0x00, 0x00, 0x00, 0x00, 0x00,  // ................
  0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xea, 0x00, 0x00, 0x00, 0xeb, 0x00, 0x00, 0x00, 0x13, 0x01,  // ................
  0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xeb, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00,  // ..........Q.....
  0x00, 0x00, 0xee, 0x00, 0x00, 0x00, 0xe6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00,  // ..............>.
  0x03, 0x00, 0xd2, 0x00, 0x00, 0x00, 0x6f, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x13, 0x00,  // ......o...A.....
  0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0xd2, 0x00, 0x00, 0x00, 0x4b, 0x01, 0x00, 0x00, 0x3d, 0x00,  // ..........K...=.
  0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf1, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x85, 0x00,  // ................
  0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf2, 0x00, 0x00, 0x00, 0xee, 0x00, 0x00, 0x00, 0xf1, 0x00,  // ................
  0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xf3, 0x00, 0x00, 0x00, 0xf2, 0x00,  // ..P.............
  0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xf4, 0x00,  // ..?.............
  0x00, 0x00, 0xad, 0x00, 0x00, 0x00, 0xf3, 0x00, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x31, 0x00,  // ..........V...1.
  0x00, 0x00, 0x2f, 0x01, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x57, 0x00,  // ../...&...#...W.
  0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x31, 0x01, 0x00, 0x00, 0x2f, 0x01, 0x00, 0x00, 0xf4, 0x00,  // ......1.../.....
  0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x42, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x00, 0x00, 0x31, 0x01,  // ..O...B.......1.
  0x00, 0x00, 0x31, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00,  // ..1.............
  0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0xd5, 0x00, 0x00, 0x00, 0x81, 0x00, 0x00, 0x00, 0x41, 0x00,  // ..>...........A.
  0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x00, 0x00, 0xd5, 0x00, 0x00, 0x00, 0x4b, 0x01,  // ..............K.
  0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x00, 0x00, 0xf9, 0x00,  // ..=.............
  0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0xfb, 0x00, 0x00, 0x00, 0xf7, 0x00,  // ......B.........
  0x00, 0x00, 0xfa, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0xfd, 0x00,  // ..........B.....
  0x00, 0x00, 0x4c, 0x01, 0x00, 0x00, 0xfb, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00,  // ..L.......Q.....
  0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0xe6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00,  // ..............>.
  0x03, 0x00, 0xd6, 0x00, 0x00, 0x00, 0x6f, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x13, 0x00,  // ......o...A.....
  0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0xd6, 0x00, 0x00, 0x00, 0x4b, 0x01, 0x00, 0x00, 0x3d, 0x00,  // ..........K...=.
  0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0x01, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x85, 0x00,  // ................
  0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x04, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x03, 0x01,  // ................
  0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x05, 0x01, 0x00, 0x00, 0x04, 0x01,  // ..P.............
  0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x06, 0x01,  // ..?.............
  0x00, 0x00, 0xad, 0x00, 0x00, 0x00, 0x05, 0x01, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x31, 0x00,  // ..........V...1.
  0x00, 0x00, 0x38, 0x01, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x57, 0x00,  // ..8...&...#...W.
  0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x38, 0x01, 0x00, 0x00, 0x06, 0x01,  // ......:...8.....
  0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x42, 0x00, 0x00, 0x00, 0x09, 0x01, 0x00, 0x00, 0x3a, 0x01,  // ..O...B.......:.
  0x00, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00,  // ..:.............
  0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0xd9, 0x00, 0x00, 0x00, 0x81, 0x00, 0x00, 0x00, 0x41, 0x00,  // ..>...........A.
  0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x0b, 0x01, 0x00, 0x00, 0xd9, 0x00, 0x00, 0x00, 0x4b, 0x01,  // ..............K.
  0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0c, 0x01, 0x00, 0x00, 0x0b, 0x01,  // ..=.............
  0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x0d, 0x01, 0x00, 0x00, 0x09, 0x01,  // ......B.........
  0x00, 0x00, 0x0c, 0x01, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x42, 0x00, 0x00, 0x00, 0x0f, 0x01,  // ..........B.....
  0x00, 0x00, 0xfd, 0x00, 0x00, 0x00, 0x0d, 0x01, 0x00, 0x00, 0x80, 0x00, 0x05, 0x00, 0x28, 0x00,  // ..............(.
  0x00, 0x00, 0x12, 0x01, 0x00, 0x00, 0x4b, 0x01, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0xf9, 0x00,  // ......K...).....
  0x02, 0x00, 0xe7, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x13, 0x01, 0x00, 0x00, 0x51, 0x00,  // ..............Q.
  0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x15, 0x01, 0x00, 0x00, 0x4c, 0x01, 0x00, 0x00, 0x00, 0x00,  // ..........L.....
  0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x4c, 0x01,  // ..Q...........L.
  0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x17, 0x01,  // ......Q.........
  0x00, 0x00, 0x4c, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0d, 0x00,  // ..L.......P.....
  0x00, 0x00, 0x18, 0x01, 0x00, 0x00, 0x15, 0x01, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x17, 0x01,  // ................
  0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0xb7, 0x00, 0x00, 0x00, 0x18, 0x01,  // ..E...>.........
  0x00, 0x00, 0xfd, 0x00, 0x01, 0x00, 0x38, 0x00, 0x01, 0x00, 0x00, 0x00, 0x10, 0x00 };            // ........8.......
unsigned int fs_bloom_blur_hz_bin_spirv_size = 2446;

BX_UNUSED(fs_bloom_blur_hz_bin_spirv)
BX_UNUSED(fs_bloom_blur_hz_bin_spirv_size)
static const uint8_t * fs_bloom_blur_hz_bin_esslandroid = NULL;
unsigned int fs_bloom_blur_hz_bin_esslandroid_size = 0;

BX_UNUSED(fs_bloom_blur_hz_bin_esslandroid)
BX_UNUSED(fs_bloom_blur_hz_bin_esslandroid_size)
static const uint8_t * fs_bloom_blur_hz_bin_pssl = NULL;
unsigned int fs_bloom_blur_hz_bin_pssl_size = 0;

BX_UNUSED(fs_bloom_blur_hz_bin_pssl)
BX_UNUSED(fs_bloom_blur_hz_bin_pssl_size)
static const uint8_t * fs_bloom_blur_hz_bin_esslnacl = NULL;
unsigned int fs_bloom_blur_hz_bin_esslnacl_size = 0;

BX_UNUSED(fs_bloom_blur_hz_bin_esslnacl)
BX_UNUSED(fs_bloom_blur_hz_bin_esslnacl_size)
