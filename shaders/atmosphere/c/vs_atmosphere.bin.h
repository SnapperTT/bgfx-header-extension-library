static const uint8_t vs_atmosphere_bin_glsl[] = {
  0x56, 0x53, 0x48, 0x06, 0x00, 0x00, 0x00, 0x00, 0xbf, 0xfe, 0x8f, 0xdc, 0x05, 0x00, 0x0f, 0x75,  // VSH............u
  0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x04, 0x01,  // _modelViewProj..
  0x00, 0x00, 0x01, 0x00, 0x0e, 0x75, 0x5f, 0x73, 0x75, 0x6e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,  // .....u_sunDirect
  0x69, 0x6f, 0x6e, 0x02, 0x01, 0x00, 0x00, 0x01, 0x00, 0x0d, 0x75, 0x5f, 0x65, 0x79, 0x65, 0x50,  // ion.......u_eyeP
  0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x02, 0x01, 0x00, 0x00, 0x01, 0x00, 0x11, 0x75, 0x5f,  // osition.......u_
  0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x41, 0x6e, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x02,  // worldPosAndSize.
  0x01, 0x00, 0x00, 0x01, 0x00, 0x0e, 0x75, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x4f, 0x66,  // ......u_cameraOf
  0x66, 0x73, 0x65, 0x74, 0x02, 0x01, 0x00, 0x00, 0x01, 0x00, 0x1b, 0x29, 0x00, 0x00, 0x61, 0x74,  // fset.......)..at
  0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x61, 0x5f, 0x70,  // tribute vec3 a_p
  0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67,  // osition;.varying
  0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x62, 0x69, 0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e,  //  vec3 v_bitangen
  0x74, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20,  // t;.varying vec3 
  0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e,  // v_normal;.varyin
  0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74,  // g vec3 v_tangent
  0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75,  // ;.uniform mat4 u
  0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a,  // _modelViewProj;.
  0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x73,  // uniform vec4 u_s
  0x75, 0x6e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x75, 0x6e, 0x69,  // unDirection;.uni
  0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x65, 0x79, 0x65, 0x50,  // form vec4 u_eyeP
  0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d,  // osition;.uniform
  0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73,  //  vec4 u_worldPos
  0x41, 0x6e, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d,  // AndSize;.uniform
  0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x4f, 0x66,  //  vec4 u_cameraOf
  0x66, 0x73, 0x65, 0x74, 0x3b, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x20,  // fset;.void main 
  0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x33, 0x46, 0x72,  // ().{.  vec3 v3Fr
  0x6f, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x66, 0x6c,  // ontColor_1;.  fl
  0x6f, 0x61, 0x74, 0x20, 0x66, 0x46, 0x61, 0x72, 0x5f, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65,  // oat fFar_2;.  ve
  0x63, 0x33, 0x20, 0x76, 0x33, 0x52, 0x61, 0x79, 0x5f, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65,  // c3 v3Ray_3;.  ve
  0x63, 0x33, 0x20, 0x76, 0x33, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x5f, 0x34, 0x3b,  // c3 v3LightDir_4;
  0x0a, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f,  // .  float tmpvar_
  0x35, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x20, 0x3d, 0x20,  // 5;.  tmpvar_5 = 
  0x28, 0x31, 0x2e, 0x30, 0x32, 0x35, 0x36, 0x34, 0x31, 0x20, 0x2a, 0x20, 0x75, 0x5f, 0x77, 0x6f,  // (1.025641 * u_wo
  0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x41, 0x6e, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x2e, 0x77, 0x29,  // rldPosAndSize.w)
  0x3b, 0x0a, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72,  // ;.  float tmpvar
  0x5f, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x20, 0x3d,  // _6;.  tmpvar_6 =
  0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70,  //  (tmpvar_5 * tmp
  0x76, 0x61, 0x72, 0x5f, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20,  // var_5);.  float 
  0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76,  // tmpvar_7;.  tmpv
  0x61, 0x72, 0x5f, 0x37, 0x20, 0x3d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x28, 0x28, 0x74, 0x6d,  // ar_7 = (1.0/((tm
  0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x20, 0x2d, 0x20, 0x75, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64,  // pvar_5 - u_world
  0x50, 0x6f, 0x73, 0x41, 0x6e, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x2e, 0x77, 0x29, 0x29, 0x29, 0x3b,  // PosAndSize.w)));
  0x0a, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f,  // .  float tmpvar_
  0x38, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x38, 0x20, 0x3d, 0x20,  // 8;.  tmpvar_8 = 
  0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x37, 0x20, 0x2f, 0x20, 0x30, 0x2e, 0x32, 0x35,  // (tmpvar_7 / 0.25
  0x29, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72,  // );.  vec3 tmpvar
  0x5f, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x39, 0x20, 0x3d,  // _9;.  tmpvar_9 =
  0x20, 0x28, 0x75, 0x5f, 0x65, 0x79, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e,  //  (u_eyePosition.
  0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x75, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x4f, 0x66,  // xyz + u_cameraOf
  0x66, 0x73, 0x65, 0x74, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x33, 0x4c,  // fset.xyz);.  v3L
  0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x5f, 0x34, 0x20, 0x3d, 0x20, 0x2d, 0x28, 0x75, 0x5f,  // ightDir_4 = -(u_
  0x73, 0x75, 0x6e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x78, 0x79, 0x7a,  // sunDirection.xyz
  0x29, 0x3b, 0x0a, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61,  // );.  float tmpva
  0x72, 0x5f, 0x31, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31,  // r_10;.  tmpvar_1
  0x30, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x64, 0x6f, 0x74, 0x20, 0x28, 0x74, 0x6d,  // 0 = sqrt(dot (tm
  0x70, 0x76, 0x61, 0x72, 0x5f, 0x39, 0x2c, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x39,  // pvar_9, tmpvar_9
  0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76,  // ));.  float tmpv
  0x61, 0x72, 0x5f, 0x31, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f,  // ar_11;.  tmpvar_
  0x31, 0x31, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x30, 0x20,  // 11 = (tmpvar_10 
  0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20,  // * tmpvar_10);.  
  0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x32, 0x3b, 0x0a,  // vec3 tmpvar_12;.
  0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x32, 0x20, 0x3d, 0x20, 0x28, 0x61,  //   tmpvar_12 = (a
  0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76,  // _position * tmpv
  0x61, 0x72, 0x5f, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d,  // ar_5);.  vec3 tm
  0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61,  // pvar_13;.  tmpva
  0x72, 0x5f, 0x31, 0x33, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31,  // r_13 = (tmpvar_1
  0x32, 0x20, 0x2d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x39, 0x29, 0x3b, 0x0a, 0x20,  // 2 - tmpvar_9);. 
  0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x34,  //  float tmpvar_14
  0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x34, 0x20, 0x3d, 0x20,  // ;.  tmpvar_14 = 
  0x73, 0x71, 0x72, 0x74, 0x28, 0x64, 0x6f, 0x74, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72,  // sqrt(dot (tmpvar
  0x5f, 0x31, 0x33, 0x2c, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x33, 0x29, 0x29,  // _13, tmpvar_13))
  0x3b, 0x0a, 0x20, 0x20, 0x66, 0x46, 0x61, 0x72, 0x5f, 0x32, 0x20, 0x3d, 0x20, 0x74, 0x6d, 0x70,  // ;.  fFar_2 = tmp
  0x76, 0x61, 0x72, 0x5f, 0x31, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x33, 0x52, 0x61, 0x79, 0x5f,  // var_14;.  v3Ray_
  0x33, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x33, 0x20, 0x2f,  // 3 = (tmpvar_13 /
  0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x34, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x76,  //  tmpvar_14);.  v
  0x33, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x20, 0x3d, 0x20,  // 3FrontColor_1 = 
  0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30,  // vec3(0.0, 0.0, 0
  0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76,  // .0);.  if ((tmpv
  0x61, 0x72, 0x5f, 0x31, 0x30, 0x20, 0x3e, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35,  // ar_10 > tmpvar_5
  0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x33,  // )) {.    vec3 v3
  0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x31, 0x35, 0x3b, 0x0a,  // SamplePoint_15;.
  0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x53, 0x63, 0x61, 0x6c, 0x65,  //     float fScale
  0x64, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x5f, 0x31, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20,  // dLength_16;.    
  0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x66, 0x66, 0x73,  // float fStartOffs
  0x65, 0x74, 0x5f, 0x31, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74,  // et_17;.    float
  0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20,  //  tmpvar_18;.    
  0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x39, 0x3b,  // float tmpvar_19;
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x39, 0x20, 0x3d,  // .    tmpvar_19 =
  0x20, 0x28, 0x32, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x64, 0x6f, 0x74, 0x20, 0x28, 0x74, 0x6d, 0x70,  //  (2.0 * dot (tmp
  0x76, 0x61, 0x72, 0x5f, 0x39, 0x2c, 0x20, 0x76, 0x33, 0x52, 0x61, 0x79, 0x5f, 0x33, 0x29, 0x29,  // var_9, v3Ray_3))
  0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x38, 0x20,  // ;.    tmpvar_18 
  0x3d, 0x20, 0x28, 0x30, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x28, 0x2d, 0x28, 0x74, 0x6d, 0x70, 0x76,  // = (0.5 * (-(tmpv
  0x61, 0x72, 0x5f, 0x31, 0x39, 0x29, 0x20, 0x2d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x0a, 0x20,  // ar_19) - sqrt(. 
  0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x61, 0x78, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x28,  //      max (0.0, (
  0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x39, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70,  // (tmpvar_19 * tmp
  0x76, 0x61, 0x72, 0x5f, 0x31, 0x39, 0x29, 0x20, 0x2d, 0x20, 0x28, 0x34, 0x2e, 0x30, 0x20, 0x2a,  // var_19) - (4.0 *
  0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x31, 0x20, 0x2d, 0x20, 0x74, 0x6d,  //  (tmpvar_11 - tm
  0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x29, 0x29, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x29,  // pvar_6)))).    )
  0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70,  // ));.    vec3 tmp
  0x76, 0x61, 0x72, 0x5f, 0x32, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76,  // var_20;.    tmpv
  0x61, 0x72, 0x5f, 0x32, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f,  // ar_20 = (tmpvar_
  0x39, 0x20, 0x2b, 0x20, 0x28, 0x76, 0x33, 0x52, 0x61, 0x79, 0x5f, 0x33, 0x20, 0x2a, 0x20, 0x74,  // 9 + (v3Ray_3 * t
  0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x38, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20,  // mpvar_18));.    
  0x66, 0x46, 0x61, 0x72, 0x5f, 0x32, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72,  // fFar_2 = (tmpvar
  0x5f, 0x31, 0x34, 0x20, 0x2d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x38, 0x29,  // _14 - tmpvar_18)
  0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76,  // ;.    float tmpv
  0x61, 0x72, 0x5f, 0x32, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61,  // ar_21;.    tmpva
  0x72, 0x5f, 0x32, 0x31, 0x20, 0x3d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x64,  // r_21 = (1.0 - (d
  0x6f, 0x74, 0x20, 0x28, 0x76, 0x33, 0x52, 0x61, 0x79, 0x5f, 0x33, 0x2c, 0x20, 0x74, 0x6d, 0x70,  // ot (v3Ray_3, tmp
  0x76, 0x61, 0x72, 0x5f, 0x32, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72,  // var_20) / tmpvar
  0x5f, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x53, 0x74, 0x61, 0x72, 0x74,  // _5));.    fStart
  0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x31, 0x37, 0x20, 0x3d, 0x20, 0x28, 0x65, 0x78, 0x70,  // Offset_17 = (exp
  0x28, 0x28, 0x2d, 0x30, 0x2e, 0x30, 0x30, 0x32, 0x38, 0x37, 0x20, 0x2b, 0x20, 0x0a, 0x20, 0x20,  // ((-0.00287 + .  
  0x20, 0x20, 0x20, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x31, 0x20, 0x2a,  //     (tmpvar_21 *
  0x20, 0x28, 0x30, 0x2e, 0x34, 0x35, 0x39, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61,  //  (0.459 + (tmpva
  0x72, 0x5f, 0x32, 0x31, 0x20, 0x2a, 0x20, 0x28, 0x33, 0x2e, 0x38, 0x33, 0x20, 0x2b, 0x20, 0x0a,  // r_21 * (3.83 + .
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f,  //         (tmpvar_
  0x32, 0x31, 0x20, 0x2a, 0x20, 0x28, 0x2d, 0x36, 0x2e, 0x38, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x6d,  // 21 * (-6.8 + (tm
  0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x31, 0x20, 0x2a, 0x20, 0x35, 0x2e, 0x32, 0x35, 0x29, 0x29,  // pvar_21 * 5.25))
  0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x29, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20,  // ).      )))).   
  0x20, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x34, 0x35, 0x37, 0x38, 0x39, 0x31,  //  )) * 0.00457891
  0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70,  // );.    float tmp
  0x76, 0x61, 0x72, 0x5f, 0x32, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76,  // var_22;.    tmpv
  0x61, 0x72, 0x5f, 0x32, 0x32, 0x20, 0x3d, 0x20, 0x28, 0x66, 0x46, 0x61, 0x72, 0x5f, 0x32, 0x20,  // ar_22 = (fFar_2 
  0x2f, 0x20, 0x34, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x53, 0x63, 0x61,  // / 4.0);.    fSca
  0x6c, 0x65, 0x64, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x5f, 0x31, 0x36, 0x20, 0x3d, 0x20, 0x28,  // ledLength_16 = (
  0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x32, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76,  // tmpvar_22 * tmpv
  0x61, 0x72, 0x5f, 0x37, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20,  // ar_7);.    vec3 
  0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74,  // tmpvar_23;.    t
  0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x33, 0x20, 0x3d, 0x20, 0x28, 0x76, 0x33, 0x52, 0x61,  // mpvar_23 = (v3Ra
  0x79, 0x5f, 0x33, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x32, 0x29,  // y_3 * tmpvar_22)
  0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x76, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x50, 0x6f,  // ;.    v3SamplePo
  0x69, 0x6e, 0x74, 0x5f, 0x31, 0x35, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72,  // int_15 = (tmpvar
  0x5f, 0x32, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x33,  // _20 + (tmpvar_23
  0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c,  //  * 0.5));.    fl
  0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x34, 0x3b, 0x0a, 0x20,  // oat tmpvar_24;. 
  0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x34, 0x20, 0x3d, 0x20, 0x73,  //    tmpvar_24 = s
  0x71, 0x72, 0x74, 0x28, 0x64, 0x6f, 0x74, 0x20, 0x28, 0x76, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c,  // qrt(dot (v3Sampl
  0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x31, 0x35, 0x2c, 0x20, 0x76, 0x33, 0x53, 0x61, 0x6d,  // ePoint_15, v3Sam
  0x70, 0x6c, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x31, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20,  // plePoint_15));. 
  0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f,  //    float tmpvar_
  0x32, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32,  // 25;.    tmpvar_2
  0x35, 0x20, 0x3d, 0x20, 0x65, 0x78, 0x70, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f,  // 5 = exp((tmpvar_
  0x38, 0x20, 0x2a, 0x20, 0x28, 0x75, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x41,  // 8 * (u_worldPosA
  0x6e, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x2e, 0x77, 0x20, 0x2d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61,  // ndSize.w - tmpva
  0x72, 0x5f, 0x32, 0x34, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f,  // r_24)));.    flo
  0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x36, 0x3b, 0x0a, 0x20, 0x20,  // at tmpvar_26;.  
  0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x36, 0x20, 0x3d, 0x20, 0x28, 0x31,  //   tmpvar_26 = (1
  0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x64, 0x6f, 0x74, 0x20, 0x28, 0x76, 0x33, 0x4c, 0x69, 0x67,  // .0 - (dot (v3Lig
  0x68, 0x74, 0x44, 0x69, 0x72, 0x5f, 0x34, 0x2c, 0x20, 0x76, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c,  // htDir_4, v3Sampl
  0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x31, 0x35, 0x29, 0x20, 0x2f, 0x20, 0x74, 0x6d, 0x70,  // ePoint_15) / tmp
  0x76, 0x61, 0x72, 0x5f, 0x32, 0x34, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c,  // var_24));.    fl
  0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x37, 0x3b, 0x0a, 0x20,  // oat tmpvar_27;. 
  0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x37, 0x20, 0x3d, 0x20, 0x28,  //    tmpvar_27 = (
  0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x64, 0x6f, 0x74, 0x20, 0x28, 0x76, 0x33, 0x52, 0x61,  // 1.0 - (dot (v3Ra
  0x79, 0x5f, 0x33, 0x2c, 0x20, 0x76, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x50, 0x6f, 0x69,  // y_3, v3SamplePoi
  0x6e, 0x74, 0x5f, 0x31, 0x35, 0x29, 0x20, 0x2f, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f,  // nt_15) / tmpvar_
  0x32, 0x34, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x76, 0x33, 0x46, 0x72, 0x6f, 0x6e,  // 24));.    v3Fron
  0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x20, 0x3d, 0x20, 0x28, 0x65, 0x78, 0x70, 0x28,  // tColor_1 = (exp(
  0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2d, 0x28, 0x28, 0x66, 0x53, 0x74, 0x61, 0x72,  // (.      -((fStar
  0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x31, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x6d,  // tOffset_17 + (tm
  0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x28, 0x0a, 0x20, 0x20, 0x20, 0x20,  // pvar_25 * (.    
  0x20, 0x20, 0x20, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x65, 0x78, 0x70, 0x28,  //     (0.25 * exp(
  0x28, 0x2d, 0x30, 0x2e, 0x30, 0x30, 0x32, 0x38, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x6d, 0x70,  // (-0.00287 + (tmp
  0x76, 0x61, 0x72, 0x5f, 0x32, 0x36, 0x20, 0x2a, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // var_26 * .      
  0x20, 0x20, 0x20, 0x20, 0x28, 0x30, 0x2e, 0x34, 0x35, 0x39, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x6d,  //     (0.459 + (tm
  0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x36, 0x20, 0x2a, 0x20, 0x28, 0x33, 0x2e, 0x38, 0x33, 0x20,  // pvar_26 * (3.83 
  0x2b, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x36, 0x20, 0x2a, 0x20, 0x0a,  // + (tmpvar_26 * .
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x2d, 0x36, 0x2e,  //             (-6.
  0x38, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x36, 0x20, 0x2a,  // 8 + (tmpvar_26 *
  0x20, 0x35, 0x2e, 0x32, 0x35, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //  5.25)).        
  0x20, 0x20, 0x29, 0x29, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29,  //   )))).        )
  0x29, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2d, 0x20, 0x0a, 0x20, 0x20,  // ))).       - .  
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x65, 0x78,  //       (0.25 * ex
  0x70, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x30, 0x30, 0x32, 0x38, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x74,  // p((-0.00287 + (t
  0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x37, 0x20, 0x2a, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20,  // mpvar_27 * .    
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x30, 0x2e, 0x34, 0x35, 0x39, 0x20, 0x2b, 0x20, 0x28,  //       (0.459 + (
  0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x37, 0x20, 0x2a, 0x20, 0x28, 0x33, 0x2e, 0x38,  // tmpvar_27 * (3.8
  0x33, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x37, 0x20, 0x2a,  // 3 + (tmpvar_27 *
  0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x2d,  //  .            (-
  0x36, 0x2e, 0x38, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x37,  // 6.8 + (tmpvar_27
  0x20, 0x2a, 0x20, 0x35, 0x2e, 0x32, 0x35, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //  * 5.25)).      
  0x20, 0x20, 0x20, 0x20, 0x29, 0x29, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //     )))).       
  0x20, 0x29, 0x29, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x29, 0x29, 0x29,  //  )))).      ))))
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2a, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31,  // .     * vec3(0.1
  0x37, 0x32, 0x32, 0x31, 0x30, 0x37, 0x2c, 0x20, 0x30, 0x2e, 0x32, 0x36, 0x39, 0x35, 0x30, 0x35,  // 722107, 0.269505
  0x36, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x32, 0x35, 0x31, 0x31, 0x38, 0x36, 0x29, 0x29, 0x29, 0x20,  // 6, 0.5251186))) 
  0x2a, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x66,  // * (tmpvar_25 * f
  0x53, 0x63, 0x61, 0x6c, 0x65, 0x64, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x5f, 0x31, 0x36, 0x29,  // ScaledLength_16)
  0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x76, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x50,  // );.    v3SampleP
  0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x31, 0x35, 0x20, 0x3d, 0x20, 0x28, 0x76, 0x33, 0x53, 0x61, 0x6d,  // oint_15 = (v3Sam
  0x70, 0x6c, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x31, 0x35, 0x20, 0x2b, 0x20, 0x74, 0x6d,  // plePoint_15 + tm
  0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x33, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c,  // pvar_23);.    fl
  0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x38, 0x3b, 0x0a, 0x20,  // oat tmpvar_28;. 
  0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x38, 0x20, 0x3d, 0x20, 0x73,  //    tmpvar_28 = s
  0x71, 0x72, 0x74, 0x28, 0x64, 0x6f, 0x74, 0x20, 0x28, 0x76, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c,  // qrt(dot (v3Sampl
  0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x31, 0x35, 0x2c, 0x20, 0x76, 0x33, 0x53, 0x61, 0x6d,  // ePoint_15, v3Sam
  0x70, 0x6c, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x31, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20,  // plePoint_15));. 
  0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f,  //    float tmpvar_
  0x32, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32,  // 29;.    tmpvar_2
  0x39, 0x20, 0x3d, 0x20, 0x65, 0x78, 0x70, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f,  // 9 = exp((tmpvar_
  0x38, 0x20, 0x2a, 0x20, 0x28, 0x75, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x41,  // 8 * (u_worldPosA
  0x6e, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x2e, 0x77, 0x20, 0x2d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61,  // ndSize.w - tmpva
  0x72, 0x5f, 0x32, 0x38, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f,  // r_28)));.    flo
  0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x30, 0x3b, 0x0a, 0x20, 0x20,  // at tmpvar_30;.  
  0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x31,  //   tmpvar_30 = (1
  0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x64, 0x6f, 0x74, 0x20, 0x28, 0x76, 0x33, 0x4c, 0x69, 0x67,  // .0 - (dot (v3Lig
  0x68, 0x74, 0x44, 0x69, 0x72, 0x5f, 0x34, 0x2c, 0x20, 0x76, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c,  // htDir_4, v3Sampl
  0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x31, 0x35, 0x29, 0x20, 0x2f, 0x20, 0x74, 0x6d, 0x70,  // ePoint_15) / tmp
  0x76, 0x61, 0x72, 0x5f, 0x32, 0x38, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c,  // var_28));.    fl
  0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x31, 0x3b, 0x0a, 0x20,  // oat tmpvar_31;. 
  0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x31, 0x20, 0x3d, 0x20, 0x28,  //    tmpvar_31 = (
  0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x64, 0x6f, 0x74, 0x20, 0x28, 0x76, 0x33, 0x52, 0x61,  // 1.0 - (dot (v3Ra
  0x79, 0x5f, 0x33, 0x2c, 0x20, 0x76, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x50, 0x6f, 0x69,  // y_3, v3SamplePoi
  0x6e, 0x74, 0x5f, 0x31, 0x35, 0x29, 0x20, 0x2f, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f,  // nt_15) / tmpvar_
  0x32, 0x38, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x76, 0x33, 0x46, 0x72, 0x6f, 0x6e,  // 28));.    v3Fron
  0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x20, 0x3d, 0x20, 0x28, 0x76, 0x33, 0x46, 0x72,  // tColor_1 = (v3Fr
  0x6f, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x20, 0x2b, 0x20, 0x28, 0x65, 0x78,  // ontColor_1 + (ex
  0x70, 0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x2d, 0x28, 0x28, 0x66, 0x53, 0x74,  // p(.      (-((fSt
  0x61, 0x72, 0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x31, 0x37, 0x20, 0x2b, 0x20, 0x28,  // artOffset_17 + (
  0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x39, 0x20, 0x2a, 0x20, 0x0a, 0x20, 0x20, 0x20,  // tmpvar_29 * .   
  0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x28, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x65, 0x78,  //      ((0.25 * ex
  0x70, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x30, 0x30, 0x32, 0x38, 0x37, 0x20, 0x2b, 0x20, 0x0a, 0x20,  // p((-0.00287 + . 
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72,  //          (tmpvar
  0x5f, 0x33, 0x30, 0x20, 0x2a, 0x20, 0x28, 0x30, 0x2e, 0x34, 0x35, 0x39, 0x20, 0x2b, 0x20, 0x28,  // _30 * (0.459 + (
  0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x30, 0x20, 0x2a, 0x20, 0x28, 0x33, 0x2e, 0x38,  // tmpvar_30 * (3.8
  0x33, 0x20, 0x2b, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // 3 + .           
  0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x30, 0x20, 0x2a, 0x20, 0x28, 0x2d,  //  (tmpvar_30 * (-
  0x36, 0x2e, 0x38, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x30,  // 6.8 + (tmpvar_30
  0x20, 0x2a, 0x20, 0x35, 0x2e, 0x32, 0x35, 0x29, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20,  //  * 5.25))).     
  0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x29, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //      )))).      
  0x20, 0x20, 0x29, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2a, 0x20,  //   ))) - (0.25 * 
  0x65, 0x78, 0x70, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x30, 0x30, 0x32, 0x38, 0x37, 0x20, 0x2b, 0x20,  // exp((-0.00287 + 
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76,  // .          (tmpv
  0x61, 0x72, 0x5f, 0x33, 0x31, 0x20, 0x2a, 0x20, 0x28, 0x30, 0x2e, 0x34, 0x35, 0x39, 0x20, 0x2b,  // ar_31 * (0.459 +
  0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x31, 0x20, 0x2a, 0x20, 0x28, 0x33,  //  (tmpvar_31 * (3
  0x2e, 0x38, 0x33, 0x20, 0x2b, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .83 + .         
  0x20, 0x20, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x31, 0x20, 0x2a, 0x20,  //    (tmpvar_31 * 
  0x28, 0x2d, 0x36, 0x2e, 0x38, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f,  // (-6.8 + (tmpvar_
  0x33, 0x31, 0x20, 0x2a, 0x20, 0x35, 0x2e, 0x32, 0x35, 0x29, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20,  // 31 * 5.25))).   
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x29, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20,  //        )))).    
  0x20, 0x20, 0x20, 0x20, 0x29, 0x29, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29,  //     )))).      )
  0x29, 0x29, 0x20, 0x2a, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x32, 0x32,  // )) * vec3(0.1722
  0x31, 0x30, 0x37, 0x2c, 0x20, 0x30, 0x2e, 0x32, 0x36, 0x39, 0x35, 0x30, 0x35, 0x36, 0x2c, 0x20,  // 107, 0.2695056, 
  0x30, 0x2e, 0x35, 0x32, 0x35, 0x31, 0x31, 0x38, 0x36, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20,  // 0.5251186)).    
  0x29, 0x20, 0x2a, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x39, 0x20, 0x2a,  // ) * (tmpvar_29 *
  0x20, 0x66, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x64, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x5f, 0x31,  //  fScaledLength_1
  0x36, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x76, 0x33, 0x53, 0x61, 0x6d, 0x70,  // 6)));.    v3Samp
  0x6c, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x31, 0x35, 0x20, 0x3d, 0x20, 0x28, 0x76, 0x33,  // lePoint_15 = (v3
  0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x31, 0x35, 0x20, 0x2b,  // SamplePoint_15 +
  0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x33, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20,  //  tmpvar_23);.   
  0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x32,  //  float tmpvar_32
  0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x32, 0x20,  // ;.    tmpvar_32 
  0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x64, 0x6f, 0x74, 0x20, 0x28, 0x76, 0x33, 0x53, 0x61,  // = sqrt(dot (v3Sa
  0x6d, 0x70, 0x6c, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x31, 0x35, 0x2c, 0x20, 0x76, 0x33,  // mplePoint_15, v3
  0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x31, 0x35, 0x29, 0x29,  // SamplePoint_15))
  0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76,  // ;.    float tmpv
  0x61, 0x72, 0x5f, 0x33, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61,  // ar_33;.    tmpva
  0x72, 0x5f, 0x33, 0x33, 0x20, 0x3d, 0x20, 0x65, 0x78, 0x70, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76,  // r_33 = exp((tmpv
  0x61, 0x72, 0x5f, 0x38, 0x20, 0x2a, 0x20, 0x28, 0x75, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50,  // ar_8 * (u_worldP
  0x6f, 0x73, 0x41, 0x6e, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x2e, 0x77, 0x20, 0x2d, 0x20, 0x74, 0x6d,  // osAndSize.w - tm
  0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x32, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20,  // pvar_32)));.    
  0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x34, 0x3b,  // float tmpvar_34;
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x34, 0x20, 0x3d,  // .    tmpvar_34 =
  0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x64, 0x6f, 0x74, 0x20, 0x28, 0x76, 0x33,  //  (1.0 - (dot (v3
  0x4c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x5f, 0x34, 0x2c, 0x20, 0x76, 0x33, 0x53, 0x61,  // LightDir_4, v3Sa
  0x6d, 0x70, 0x6c, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x31, 0x35, 0x29, 0x20, 0x2f, 0x20,  // mplePoint_15) / 
  0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x32, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20,  // tmpvar_32));.   
  0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x35,  //  float tmpvar_35
  0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x35, 0x20,  // ;.    tmpvar_35 
  0x3d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x64, 0x6f, 0x74, 0x20, 0x28, 0x76,  // = (1.0 - (dot (v
  0x33, 0x52, 0x61, 0x79, 0x5f, 0x33, 0x2c, 0x20, 0x76, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65,  // 3Ray_3, v3Sample
  0x50, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x31, 0x35, 0x29, 0x20, 0x2f, 0x20, 0x74, 0x6d, 0x70, 0x76,  // Point_15) / tmpv
  0x61, 0x72, 0x5f, 0x33, 0x32, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x76, 0x33, 0x46,  // ar_32));.    v3F
  0x72, 0x6f, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x20, 0x3d, 0x20, 0x28, 0x76,  // rontColor_1 = (v
  0x33, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x20, 0x2b, 0x20,  // 3FrontColor_1 + 
  0x28, 0x65, 0x78, 0x70, 0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x2d, 0x28, 0x28,  // (exp(.      (-((
  0x66, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x31, 0x37, 0x20,  // fStartOffset_17 
  0x2b, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x33, 0x20, 0x2a, 0x20, 0x0a,  // + (tmpvar_33 * .
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x28, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2a,  //         ((0.25 *
  0x20, 0x65, 0x78, 0x70, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x30, 0x30, 0x32, 0x38, 0x37, 0x20, 0x2b,  //  exp((-0.00287 +
  0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x74, 0x6d, 0x70,  //  .          (tmp
  0x76, 0x61, 0x72, 0x5f, 0x33, 0x34, 0x20, 0x2a, 0x20, 0x28, 0x30, 0x2e, 0x34, 0x35, 0x39, 0x20,  // var_34 * (0.459 
  0x2b, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x34, 0x20, 0x2a, 0x20, 0x28,  // + (tmpvar_34 * (
  0x33, 0x2e, 0x38, 0x33, 0x20, 0x2b, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // 3.83 + .        
  0x20, 0x20, 0x20, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x34, 0x20, 0x2a,  //     (tmpvar_34 *
  0x20, 0x28, 0x2d, 0x36, 0x2e, 0x38, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72,  //  (-6.8 + (tmpvar
  0x5f, 0x33, 0x34, 0x20, 0x2a, 0x20, 0x35, 0x2e, 0x32, 0x35, 0x29, 0x29, 0x29, 0x0a, 0x20, 0x20,  // _34 * 5.25))).  
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x29, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20,  //         )))).   
  0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x35,  //      ))) - (0.25
  0x20, 0x2a, 0x20, 0x65, 0x78, 0x70, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x30, 0x30, 0x32, 0x38, 0x37,  //  * exp((-0.00287
  0x20, 0x2b, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x74,  //  + .          (t
  0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x35, 0x20, 0x2a, 0x20, 0x28, 0x30, 0x2e, 0x34, 0x35,  // mpvar_35 * (0.45
  0x39, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x35, 0x20, 0x2a,  // 9 + (tmpvar_35 *
  0x20, 0x28, 0x33, 0x2e, 0x38, 0x33, 0x20, 0x2b, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //  (3.83 + .      
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x35,  //       (tmpvar_35
  0x20, 0x2a, 0x20, 0x28, 0x2d, 0x36, 0x2e, 0x38, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76,  //  * (-6.8 + (tmpv
  0x61, 0x72, 0x5f, 0x33, 0x35, 0x20, 0x2a, 0x20, 0x35, 0x2e, 0x32, 0x35, 0x29, 0x29, 0x29, 0x0a,  // ar_35 * 5.25))).
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x29, 0x29, 0x29, 0x0a, 0x20,  //           )))). 
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x29, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20,  //        )))).    
  0x20, 0x20, 0x29, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31,  //   ))) * vec3(0.1
  0x37, 0x32, 0x32, 0x31, 0x30, 0x37, 0x2c, 0x20, 0x30, 0x2e, 0x32, 0x36, 0x39, 0x35, 0x30, 0x35,  // 722107, 0.269505
  0x36, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x32, 0x35, 0x31, 0x31, 0x38, 0x36, 0x29, 0x29, 0x0a, 0x20,  // 6, 0.5251186)). 
  0x20, 0x20, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33,  //    ) * (tmpvar_3
  0x33, 0x20, 0x2a, 0x20, 0x66, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x64, 0x4c, 0x65, 0x6e, 0x67, 0x74,  // 3 * fScaledLengt
  0x68, 0x5f, 0x31, 0x36, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x76, 0x33, 0x53,  // h_16)));.    v3S
  0x61, 0x6d, 0x70, 0x6c, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x31, 0x35, 0x20, 0x3d, 0x20,  // amplePoint_15 = 
  0x28, 0x76, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x31,  // (v3SamplePoint_1
  0x35, 0x20, 0x2b, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x33, 0x29, 0x3b, 0x0a,  // 5 + tmpvar_23);.
  0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72,  //     float tmpvar
  0x5f, 0x33, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f,  // _36;.    tmpvar_
  0x33, 0x36, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x64, 0x6f, 0x74, 0x20, 0x28, 0x76,  // 36 = sqrt(dot (v
  0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x31, 0x35, 0x2c,  // 3SamplePoint_15,
  0x20, 0x76, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x31,  //  v3SamplePoint_1
  0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74,  // 5));.    float t
  0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d,  // mpvar_37;.    tm
  0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x37, 0x20, 0x3d, 0x20, 0x65, 0x78, 0x70, 0x28, 0x28, 0x74,  // pvar_37 = exp((t
  0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x38, 0x20, 0x2a, 0x20, 0x28, 0x75, 0x5f, 0x77, 0x6f, 0x72,  // mpvar_8 * (u_wor
  0x6c, 0x64, 0x50, 0x6f, 0x73, 0x41, 0x6e, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x2e, 0x77, 0x20, 0x2d,  // ldPosAndSize.w -
  0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x36, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20,  //  tmpvar_36)));. 
  0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f,  //    float tmpvar_
  0x33, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33,  // 38;.    tmpvar_3
  0x38, 0x20, 0x3d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x64, 0x6f, 0x74, 0x20,  // 8 = (1.0 - (dot 
  0x28, 0x76, 0x33, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x5f, 0x34, 0x2c, 0x20, 0x76,  // (v3LightDir_4, v
  0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x31, 0x35, 0x29,  // 3SamplePoint_15)
  0x20, 0x2f, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x36, 0x29, 0x29, 0x3b, 0x0a,  //  / tmpvar_36));.
  0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72,  //     float tmpvar
  0x5f, 0x33, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f,  // _39;.    tmpvar_
  0x33, 0x39, 0x20, 0x3d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x64, 0x6f, 0x74,  // 39 = (1.0 - (dot
  0x20, 0x28, 0x76, 0x33, 0x52, 0x61, 0x79, 0x5f, 0x33, 0x2c, 0x20, 0x76, 0x33, 0x53, 0x61, 0x6d,  //  (v3Ray_3, v3Sam
  0x70, 0x6c, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x31, 0x35, 0x29, 0x20, 0x2f, 0x20, 0x74,  // plePoint_15) / t
  0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x36, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20,  // mpvar_36));.    
  0x76, 0x33, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x20, 0x3d,  // v3FrontColor_1 =
  0x20, 0x28, 0x76, 0x33, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31,  //  (v3FrontColor_1
  0x20, 0x2b, 0x20, 0x28, 0x65, 0x78, 0x70, 0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28,  //  + (exp(.      (
  0x2d, 0x28, 0x28, 0x66, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f,  // -((fStartOffset_
  0x31, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x37, 0x20,  // 17 + (tmpvar_37 
  0x2a, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x28, 0x30, 0x2e, 0x32,  // * .        ((0.2
  0x35, 0x20, 0x2a, 0x20, 0x65, 0x78, 0x70, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x30, 0x30, 0x32, 0x38,  // 5 * exp((-0.0028
  0x37, 0x20, 0x2b, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28,  // 7 + .          (
  0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x38, 0x20, 0x2a, 0x20, 0x28, 0x30, 0x2e, 0x34,  // tmpvar_38 * (0.4
  0x35, 0x39, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x38, 0x20,  // 59 + (tmpvar_38 
  0x2a, 0x20, 0x28, 0x33, 0x2e, 0x38, 0x33, 0x20, 0x2b, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20,  // * (3.83 + .     
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33,  //        (tmpvar_3
  0x38, 0x20, 0x2a, 0x20, 0x28, 0x2d, 0x36, 0x2e, 0x38, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x6d, 0x70,  // 8 * (-6.8 + (tmp
  0x76, 0x61, 0x72, 0x5f, 0x33, 0x38, 0x20, 0x2a, 0x20, 0x35, 0x2e, 0x32, 0x35, 0x29, 0x29, 0x29,  // var_38 * 5.25)))
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x29, 0x29, 0x29, 0x0a,  // .          )))).
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x28, 0x30,  //         ))) - (0
  0x2e, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x65, 0x78, 0x70, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x30, 0x30,  // .25 * exp((-0.00
  0x32, 0x38, 0x37, 0x20, 0x2b, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // 287 + .         
  0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x39, 0x20, 0x2a, 0x20, 0x28, 0x30,  //  (tmpvar_39 * (0
  0x2e, 0x34, 0x35, 0x39, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33,  // .459 + (tmpvar_3
  0x39, 0x20, 0x2a, 0x20, 0x28, 0x33, 0x2e, 0x38, 0x33, 0x20, 0x2b, 0x20, 0x0a, 0x20, 0x20, 0x20,  // 9 * (3.83 + .   
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72,  //          (tmpvar
  0x5f, 0x33, 0x39, 0x20, 0x2a, 0x20, 0x28, 0x2d, 0x36, 0x2e, 0x38, 0x20, 0x2b, 0x20, 0x28, 0x74,  // _39 * (-6.8 + (t
  0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x39, 0x20, 0x2a, 0x20, 0x35, 0x2e, 0x32, 0x35, 0x29,  // mpvar_39 * 5.25)
  0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x29, 0x29,  // )).          )))
  0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x29, 0x29, 0x29, 0x0a, 0x20,  // ).        )))). 
  0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28,  //      ))) * vec3(
  0x30, 0x2e, 0x31, 0x37, 0x32, 0x32, 0x31, 0x30, 0x37, 0x2c, 0x20, 0x30, 0x2e, 0x32, 0x36, 0x39,  // 0.1722107, 0.269
  0x35, 0x30, 0x35, 0x36, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x32, 0x35, 0x31, 0x31, 0x38, 0x36, 0x29,  // 5056, 0.5251186)
  0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61,  // ).    ) * (tmpva
  0x72, 0x5f, 0x33, 0x37, 0x20, 0x2a, 0x20, 0x66, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x64, 0x4c, 0x65,  // r_37 * fScaledLe
  0x6e, 0x67, 0x74, 0x68, 0x5f, 0x31, 0x36, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20,  // ngth_16)));.    
  0x76, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x31, 0x35,  // v3SamplePoint_15
  0x20, 0x3d, 0x20, 0x28, 0x76, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x50, 0x6f, 0x69, 0x6e,  //  = (v3SamplePoin
  0x74, 0x5f, 0x31, 0x35, 0x20, 0x2b, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x33,  // t_15 + tmpvar_23
  0x29, 0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20,  // );.  } else {.  
  0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x50,  //   vec3 v3SampleP
  0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x34, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f,  // oint_40;.    flo
  0x61, 0x74, 0x20, 0x66, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x64, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68,  // at fScaledLength
  0x5f, 0x34, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66,  // _41;.    float f
  0x53, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x34, 0x32, 0x3b, 0x0a,  // StartOffset_42;.
  0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72,  //     float tmpvar
  0x5f, 0x34, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f,  // _43;.    tmpvar_
  0x34, 0x33, 0x20, 0x3d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x64, 0x6f, 0x74,  // 43 = (1.0 - (dot
  0x20, 0x28, 0x76, 0x33, 0x52, 0x61, 0x79, 0x5f, 0x33, 0x2c, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61,  //  (v3Ray_3, tmpva
  0x72, 0x5f, 0x39, 0x29, 0x20, 0x2f, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x0a, 0x20, 0x20, 0x20,  // r_9) / sqrt(.   
  0x20, 0x20, 0x20, 0x64, 0x6f, 0x74, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x39,  //    dot (tmpvar_9
  0x2c, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x39, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20,  // , tmpvar_9).    
  0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4f,  // )));.    fStartO
  0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x34, 0x32, 0x20, 0x3d, 0x20, 0x28, 0x65, 0x78, 0x70, 0x28,  // ffset_42 = (exp(
  0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x38, 0x20, 0x2a, 0x20, 0x0a, 0x20, 0x20, 0x20,  // (tmpvar_8 * .   
  0x20, 0x20, 0x20, 0x28, 0x75, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x41, 0x6e,  //    (u_worldPosAn
  0x64, 0x53, 0x69, 0x7a, 0x65, 0x2e, 0x77, 0x20, 0x2d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72,  // dSize.w - tmpvar
  0x5f, 0x31, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x30,  // _10).    )) * (0
  0x2e, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x65, 0x78, 0x70, 0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20,  // .25 * exp(.     
  0x20, 0x28, 0x2d, 0x30, 0x2e, 0x30, 0x30, 0x32, 0x38, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x6d,  //  (-0.00287 + (tm
  0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x33, 0x20, 0x2a, 0x20, 0x28, 0x30, 0x2e, 0x34, 0x35, 0x39,  // pvar_43 * (0.459
  0x20, 0x2b, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x33, 0x20, 0x2a, 0x20,  //  + (tmpvar_43 * 
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x33, 0x2e, 0x38, 0x33, 0x20, 0x2b,  // .        (3.83 +
  0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x33, 0x20, 0x2a, 0x20, 0x28, 0x2d,  //  (tmpvar_43 * (-
  0x36, 0x2e, 0x38, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x33,  // 6.8 + (tmpvar_43
  0x20, 0x2a, 0x20, 0x35, 0x2e, 0x32, 0x35, 0x29, 0x29, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20,  //  * 5.25)))).    
  0x20, 0x20, 0x29, 0x29, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x29, 0x29, 0x29, 0x3b, 0x0a,  //   )))).    )));.
  0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72,  //     float tmpvar
  0x5f, 0x34, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f,  // _44;.    tmpvar_
  0x34, 0x34, 0x20, 0x3d, 0x20, 0x28, 0x66, 0x46, 0x61, 0x72, 0x5f, 0x32, 0x20, 0x2a, 0x20, 0x30,  // 44 = (fFar_2 * 0
  0x2e, 0x32, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x53, 0x63, 0x61, 0x6c, 0x65,  // .25);.    fScale
  0x64, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x5f, 0x34, 0x31, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x6d,  // dLength_41 = (tm
  0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x34, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72,  // pvar_44 * tmpvar
  0x5f, 0x37, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d,  // _7);.    vec3 tm
  0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70,  // pvar_45;.    tmp
  0x76, 0x61, 0x72, 0x5f, 0x34, 0x35, 0x20, 0x3d, 0x20, 0x28, 0x76, 0x33, 0x52, 0x61, 0x79, 0x5f,  // var_45 = (v3Ray_
  0x33, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x34, 0x29, 0x3b, 0x0a,  // 3 * tmpvar_44);.
  0x20, 0x20, 0x20, 0x20, 0x76, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x50, 0x6f, 0x69, 0x6e,  //     v3SamplePoin
  0x74, 0x5f, 0x34, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x39,  // t_40 = (tmpvar_9
  0x20, 0x2b, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x35, 0x20, 0x2a, 0x20,  //  + (tmpvar_45 * 
  0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74,  // 0.5));.    float
  0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20,  //  tmpvar_46;.    
  0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x36, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74,  // tmpvar_46 = sqrt
  0x28, 0x64, 0x6f, 0x74, 0x20, 0x28, 0x76, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x50, 0x6f,  // (dot (v3SamplePo
  0x69, 0x6e, 0x74, 0x5f, 0x34, 0x30, 0x2c, 0x20, 0x76, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65,  // int_40, v3Sample
  0x50, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x34, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20,  // Point_40));.    
  0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x37, 0x3b,  // float tmpvar_47;
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x37, 0x20, 0x3d,  // .    tmpvar_47 =
  0x20, 0x65, 0x78, 0x70, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x38, 0x20, 0x2a,  //  exp((tmpvar_8 *
  0x20, 0x28, 0x75, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x41, 0x6e, 0x64, 0x53,  //  (u_worldPosAndS
  0x69, 0x7a, 0x65, 0x2e, 0x77, 0x20, 0x2d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34,  // ize.w - tmpvar_4
  0x36, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20,  // 6)));.    float 
  0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74,  // tmpvar_48;.    t
  0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x38, 0x20, 0x3d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20,  // mpvar_48 = (1.0 
  0x2d, 0x20, 0x28, 0x64, 0x6f, 0x74, 0x20, 0x28, 0x76, 0x33, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x44,  // - (dot (v3LightD
  0x69, 0x72, 0x5f, 0x34, 0x2c, 0x20, 0x76, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x50, 0x6f,  // ir_4, v3SamplePo
  0x69, 0x6e, 0x74, 0x5f, 0x34, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72,  // int_40) / tmpvar
  0x5f, 0x34, 0x36, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74,  // _46));.    float
  0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20,  //  tmpvar_49;.    
  0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x39, 0x20, 0x3d, 0x20, 0x28, 0x31, 0x2e, 0x30,  // tmpvar_49 = (1.0
  0x20, 0x2d, 0x20, 0x28, 0x64, 0x6f, 0x74, 0x20, 0x28, 0x76, 0x33, 0x52, 0x61, 0x79, 0x5f, 0x33,  //  - (dot (v3Ray_3
  0x2c, 0x20, 0x76, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x5f,  // , v3SamplePoint_
  0x34, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x36, 0x29,  // 40) / tmpvar_46)
  0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x76, 0x33, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x43, 0x6f,  // );.    v3FrontCo
  0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x20, 0x3d, 0x20, 0x28, 0x76, 0x33, 0x46, 0x72, 0x6f, 0x6e, 0x74,  // lor_1 = (v3Front
  0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x20, 0x2b, 0x20, 0x28, 0x65, 0x78, 0x70, 0x28, 0x0a,  // Color_1 + (exp(.
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x2d, 0x28, 0x28, 0x66, 0x53, 0x74, 0x61, 0x72, 0x74,  //       (-((fStart
  0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x34, 0x32, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x6d, 0x70,  // Offset_42 + (tmp
  0x76, 0x61, 0x72, 0x5f, 0x34, 0x37, 0x20, 0x2a, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // var_47 * .      
  0x20, 0x20, 0x28, 0x28, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x65, 0x78, 0x70, 0x28, 0x28,  //   ((0.25 * exp((
  0x2d, 0x30, 0x2e, 0x30, 0x30, 0x32, 0x38, 0x37, 0x20, 0x2b, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20,  // -0.00287 + .    
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x38,  //       (tmpvar_48
  0x20, 0x2a, 0x20, 0x28, 0x30, 0x2e, 0x34, 0x35, 0x39, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x6d, 0x70,  //  * (0.459 + (tmp
  0x76, 0x61, 0x72, 0x5f, 0x34, 0x38, 0x20, 0x2a, 0x20, 0x28, 0x33, 0x2e, 0x38, 0x33, 0x20, 0x2b,  // var_48 * (3.83 +
  0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x74,  //  .            (t
  0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x38, 0x20, 0x2a, 0x20, 0x28, 0x2d, 0x36, 0x2e, 0x38,  // mpvar_48 * (-6.8
  0x20, 0x2b, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x38, 0x20, 0x2a, 0x20,  //  + (tmpvar_48 * 
  0x35, 0x2e, 0x32, 0x35, 0x29, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // 5.25))).        
  0x20, 0x20, 0x29, 0x29, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29,  //   )))).        )
  0x29, 0x29, 0x20, 0x2d, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x65, 0x78, 0x70,  // )) - (0.25 * exp
  0x28, 0x28, 0x2d, 0x30, 0x2e, 0x30, 0x30, 0x32, 0x38, 0x37, 0x20, 0x2b, 0x20, 0x0a, 0x20, 0x20,  // ((-0.00287 + .  
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f,  //         (tmpvar_
  0x34, 0x39, 0x20, 0x2a, 0x20, 0x28, 0x30, 0x2e, 0x34, 0x35, 0x39, 0x20, 0x2b, 0x20, 0x28, 0x74,  // 49 * (0.459 + (t
  0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x39, 0x20, 0x2a, 0x20, 0x28, 0x33, 0x2e, 0x38, 0x33,  // mpvar_49 * (3.83
  0x20, 0x2b, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //  + .            
  0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x39, 0x20, 0x2a, 0x20, 0x28, 0x2d, 0x36,  // (tmpvar_49 * (-6
  0x2e, 0x38, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x39, 0x20,  // .8 + (tmpvar_49 
  0x2a, 0x20, 0x35, 0x2e, 0x32, 0x35, 0x29, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // * 5.25))).      
  0x20, 0x20, 0x20, 0x20, 0x29, 0x29, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //     )))).       
  0x20, 0x29, 0x29, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x29, 0x29, 0x20,  //  )))).      ))) 
  0x2a, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x32, 0x32, 0x31, 0x30, 0x37,  // * vec3(0.1722107
  0x2c, 0x20, 0x30, 0x2e, 0x32, 0x36, 0x39, 0x35, 0x30, 0x35, 0x36, 0x2c, 0x20, 0x30, 0x2e, 0x35,  // , 0.2695056, 0.5
  0x32, 0x35, 0x31, 0x31, 0x38, 0x36, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x29, 0x20, 0x2a,  // 251186)).    ) *
  0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x37, 0x20, 0x2a, 0x20, 0x66, 0x53,  //  (tmpvar_47 * fS
  0x63, 0x61, 0x6c, 0x65, 0x64, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x5f, 0x34, 0x31, 0x29, 0x29,  // caledLength_41))
  0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x76, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x50,  // );.    v3SampleP
  0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x34, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x76, 0x33, 0x53, 0x61, 0x6d,  // oint_40 = (v3Sam
  0x70, 0x6c, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x34, 0x30, 0x20, 0x2b, 0x20, 0x74, 0x6d,  // plePoint_40 + tm
  0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c,  // pvar_45);.    fl
  0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x30, 0x3b, 0x0a, 0x20,  // oat tmpvar_50;. 
  0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x30, 0x20, 0x3d, 0x20, 0x73,  //    tmpvar_50 = s
  0x71, 0x72, 0x74, 0x28, 0x64, 0x6f, 0x74, 0x20, 0x28, 0x76, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c,  // qrt(dot (v3Sampl
  0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x34, 0x30, 0x2c, 0x20, 0x76, 0x33, 0x53, 0x61, 0x6d,  // ePoint_40, v3Sam
  0x70, 0x6c, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x34, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20,  // plePoint_40));. 
  0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f,  //    float tmpvar_
  0x35, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35,  // 51;.    tmpvar_5
  0x31, 0x20, 0x3d, 0x20, 0x65, 0x78, 0x70, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f,  // 1 = exp((tmpvar_
  0x38, 0x20, 0x2a, 0x20, 0x28, 0x75, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x6f, 0x73, 0x41,  // 8 * (u_worldPosA
  0x6e, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x2e, 0x77, 0x20, 0x2d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61,  // ndSize.w - tmpva
  0x72, 0x5f, 0x35, 0x30, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f,  // r_50)));.    flo
  0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x32, 0x3b, 0x0a, 0x20, 0x20,  // at tmpvar_52;.  
  0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x32, 0x20, 0x3d, 0x20, 0x28, 0x31,  //   tmpvar_52 = (1
  0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x64, 0x6f, 0x74, 0x20, 0x28, 0x76, 0x33, 0x4c, 0x69, 0x67,  // .0 - (dot (v3Lig
  0x68, 0x74, 0x44, 0x69, 0x72, 0x5f, 0x34, 0x2c, 0x20, 0x76, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c,  // htDir_4, v3Sampl
  0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x34, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x74, 0x6d, 0x70,  // ePoint_40) / tmp
  0x76, 0x61, 0x72, 0x5f, 0x35, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c,  // var_50));.    fl
  0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x33, 0x3b, 0x0a, 0x20,  // oat tmpvar_53;. 
  0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x33, 0x20, 0x3d, 0x20, 0x28,  //    tmpvar_53 = (
  0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x64, 0x6f, 0x74, 0x20, 0x28, 0x76, 0x33, 0x52, 0x61,  // 1.0 - (dot (v3Ra
  0x79, 0x5f, 0x33, 0x2c, 0x20, 0x76, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x50, 0x6f, 0x69,  // y_3, v3SamplePoi
  0x6e, 0x74, 0x5f, 0x34, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f,  // nt_40) / tmpvar_
  0x35, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x76, 0x33, 0x46, 0x72, 0x6f, 0x6e,  // 50));.    v3Fron
  0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x20, 0x3d, 0x20, 0x28, 0x76, 0x33, 0x46, 0x72,  // tColor_1 = (v3Fr
  0x6f, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x20, 0x2b, 0x20, 0x28, 0x65, 0x78,  // ontColor_1 + (ex
  0x70, 0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x2d, 0x28, 0x28, 0x66, 0x53, 0x74,  // p(.      (-((fSt
  0x61, 0x72, 0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x34, 0x32, 0x20, 0x2b, 0x20, 0x28,  // artOffset_42 + (
  0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x31, 0x20, 0x2a, 0x20, 0x0a, 0x20, 0x20, 0x20,  // tmpvar_51 * .   
  0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x28, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x65, 0x78,  //      ((0.25 * ex
  0x70, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x30, 0x30, 0x32, 0x38, 0x37, 0x20, 0x2b, 0x20, 0x0a, 0x20,  // p((-0.00287 + . 
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72,  //          (tmpvar
  0x5f, 0x35, 0x32, 0x20, 0x2a, 0x20, 0x28, 0x30, 0x2e, 0x34, 0x35, 0x39, 0x20, 0x2b, 0x20, 0x28,  // _52 * (0.459 + (
  0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x32, 0x20, 0x2a, 0x20, 0x28, 0x33, 0x2e, 0x38,  // tmpvar_52 * (3.8
  0x33, 0x20, 0x2b, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // 3 + .           
  0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x32, 0x20, 0x2a, 0x20, 0x28, 0x2d,  //  (tmpvar_52 * (-
  0x36, 0x2e, 0x38, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x32,  // 6.8 + (tmpvar_52
  0x20, 0x2a, 0x20, 0x35, 0x2e, 0x32, 0x35, 0x29, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20,  //  * 5.25))).     
  0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x29, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //      )))).      
  0x20, 0x20, 0x29, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2a, 0x20,  //   ))) - (0.25 * 
  0x65, 0x78, 0x70, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x30, 0x30, 0x32, 0x38, 0x37, 0x20, 0x2b, 0x20,  // exp((-0.00287 + 
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76,  // .          (tmpv
  0x61, 0x72, 0x5f, 0x35, 0x33, 0x20, 0x2a, 0x20, 0x28, 0x30, 0x2e, 0x34, 0x35, 0x39, 0x20, 0x2b,  // ar_53 * (0.459 +
  0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x33, 0x20, 0x2a, 0x20, 0x28, 0x33,  //  (tmpvar_53 * (3
  0x2e, 0x38, 0x33, 0x20, 0x2b, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // .83 + .         
  0x20, 0x20, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x33, 0x20, 0x2a, 0x20,  //    (tmpvar_53 * 
  0x28, 0x2d, 0x36, 0x2e, 0x38, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f,  // (-6.8 + (tmpvar_
  0x35, 0x33, 0x20, 0x2a, 0x20, 0x35, 0x2e, 0x32, 0x35, 0x29, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20,  // 53 * 5.25))).   
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x29, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20,  //        )))).    
  0x20, 0x20, 0x20, 0x20, 0x29, 0x29, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29,  //     )))).      )
  0x29, 0x29, 0x20, 0x2a, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x37, 0x32, 0x32,  // )) * vec3(0.1722
  0x31, 0x30, 0x37, 0x2c, 0x20, 0x30, 0x2e, 0x32, 0x36, 0x39, 0x35, 0x30, 0x35, 0x36, 0x2c, 0x20,  // 107, 0.2695056, 
  0x30, 0x2e, 0x35, 0x32, 0x35, 0x31, 0x31, 0x38, 0x36, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20,  // 0.5251186)).    
  0x29, 0x20, 0x2a, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x31, 0x20, 0x2a,  // ) * (tmpvar_51 *
  0x20, 0x66, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x64, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x5f, 0x34,  //  fScaledLength_4
  0x31, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x76, 0x33, 0x53, 0x61, 0x6d, 0x70,  // 1)));.    v3Samp
  0x6c, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x34, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x76, 0x33,  // lePoint_40 = (v3
  0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x34, 0x30, 0x20, 0x2b,  // SamplePoint_40 +
  0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20,  //  tmpvar_45);.   
  0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x34,  //  float tmpvar_54
  0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x34, 0x20,  // ;.    tmpvar_54 
  0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x64, 0x6f, 0x74, 0x20, 0x28, 0x76, 0x33, 0x53, 0x61,  // = sqrt(dot (v3Sa
  0x6d, 0x70, 0x6c, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x34, 0x30, 0x2c, 0x20, 0x76, 0x33,  // mplePoint_40, v3
  0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x34, 0x30, 0x29, 0x29,  // SamplePoint_40))
  0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76,  // ;.    float tmpv
  0x61, 0x72, 0x5f, 0x35, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61,  // ar_55;.    tmpva
  0x72, 0x5f, 0x35, 0x35, 0x20, 0x3d, 0x20, 0x65, 0x78, 0x70, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76,  // r_55 = exp((tmpv
  0x61, 0x72, 0x5f, 0x38, 0x20, 0x2a, 0x20, 0x28, 0x75, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50,  // ar_8 * (u_worldP
  0x6f, 0x73, 0x41, 0x6e, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x2e, 0x77, 0x20, 0x2d, 0x20, 0x74, 0x6d,  // osAndSize.w - tm
  0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x34, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20,  // pvar_54)));.    
  0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x36, 0x3b,  // float tmpvar_56;
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x36, 0x20, 0x3d,  // .    tmpvar_56 =
  0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x64, 0x6f, 0x74, 0x20, 0x28, 0x76, 0x33,  //  (1.0 - (dot (v3
  0x4c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x5f, 0x34, 0x2c, 0x20, 0x76, 0x33, 0x53, 0x61,  // LightDir_4, v3Sa
  0x6d, 0x70, 0x6c, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x34, 0x30, 0x29, 0x20, 0x2f, 0x20,  // mplePoint_40) / 
  0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x34, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20,  // tmpvar_54));.   
  0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x37,  //  float tmpvar_57
  0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x37, 0x20,  // ;.    tmpvar_57 
  0x3d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x64, 0x6f, 0x74, 0x20, 0x28, 0x76,  // = (1.0 - (dot (v
  0x33, 0x52, 0x61, 0x79, 0x5f, 0x33, 0x2c, 0x20, 0x76, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65,  // 3Ray_3, v3Sample
  0x50, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x34, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x74, 0x6d, 0x70, 0x76,  // Point_40) / tmpv
  0x61, 0x72, 0x5f, 0x35, 0x34, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x76, 0x33, 0x46,  // ar_54));.    v3F
  0x72, 0x6f, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x20, 0x3d, 0x20, 0x28, 0x76,  // rontColor_1 = (v
  0x33, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x20, 0x2b, 0x20,  // 3FrontColor_1 + 
  0x28, 0x65, 0x78, 0x70, 0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x2d, 0x28, 0x28,  // (exp(.      (-((
  0x66, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x34, 0x32, 0x20,  // fStartOffset_42 
  0x2b, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x35, 0x20, 0x2a, 0x20, 0x0a,  // + (tmpvar_55 * .
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x28, 0x30, 0x2e, 0x32, 0x35, 0x20, 0x2a,  //         ((0.25 *
  0x20, 0x65, 0x78, 0x70, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x30, 0x30, 0x32, 0x38, 0x37, 0x20, 0x2b,  //  exp((-0.00287 +
  0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x74, 0x6d, 0x70,  //  .          (tmp
  0x76, 0x61, 0x72, 0x5f, 0x35, 0x36, 0x20, 0x2a, 0x20, 0x28, 0x30, 0x2e, 0x34, 0x35, 0x39, 0x20,  // var_56 * (0.459 
  0x2b, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x36, 0x20, 0x2a, 0x20, 0x28,  // + (tmpvar_56 * (
  0x33, 0x2e, 0x38, 0x33, 0x20, 0x2b, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // 3.83 + .        
  0x20, 0x20, 0x20, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x36, 0x20, 0x2a,  //     (tmpvar_56 *
  0x20, 0x28, 0x2d, 0x36, 0x2e, 0x38, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72,  //  (-6.8 + (tmpvar
  0x5f, 0x35, 0x36, 0x20, 0x2a, 0x20, 0x35, 0x2e, 0x32, 0x35, 0x29, 0x29, 0x29, 0x0a, 0x20, 0x20,  // _56 * 5.25))).  
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x29, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20,  //         )))).   
  0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x28, 0x30, 0x2e, 0x32, 0x35,  //      ))) - (0.25
  0x20, 0x2a, 0x20, 0x65, 0x78, 0x70, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x30, 0x30, 0x32, 0x38, 0x37,  //  * exp((-0.00287
  0x20, 0x2b, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x74,  //  + .          (t
  0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x37, 0x20, 0x2a, 0x20, 0x28, 0x30, 0x2e, 0x34, 0x35,  // mpvar_57 * (0.45
  0x39, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x37, 0x20, 0x2a,  // 9 + (tmpvar_57 *
  0x20, 0x28, 0x33, 0x2e, 0x38, 0x33, 0x20, 0x2b, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  //  (3.83 + .      
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x37,  //       (tmpvar_57
  0x20, 0x2a, 0x20, 0x28, 0x2d, 0x36, 0x2e, 0x38, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76,  //  * (-6.8 + (tmpv
  0x61, 0x72, 0x5f, 0x35, 0x37, 0x20, 0x2a, 0x20, 0x35, 0x2e, 0x32, 0x35, 0x29, 0x29, 0x29, 0x0a,  // ar_57 * 5.25))).
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x29, 0x29, 0x29, 0x0a, 0x20,  //           )))). 
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x29, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20,  //        )))).    
  0x20, 0x20, 0x29, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31,  //   ))) * vec3(0.1
  0x37, 0x32, 0x32, 0x31, 0x30, 0x37, 0x2c, 0x20, 0x30, 0x2e, 0x32, 0x36, 0x39, 0x35, 0x30, 0x35,  // 722107, 0.269505
  0x36, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x32, 0x35, 0x31, 0x31, 0x38, 0x36, 0x29, 0x29, 0x0a, 0x20,  // 6, 0.5251186)). 
  0x20, 0x20, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35,  //    ) * (tmpvar_5
  0x35, 0x20, 0x2a, 0x20, 0x66, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x64, 0x4c, 0x65, 0x6e, 0x67, 0x74,  // 5 * fScaledLengt
  0x68, 0x5f, 0x34, 0x31, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x76, 0x33, 0x53,  // h_41)));.    v3S
  0x61, 0x6d, 0x70, 0x6c, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x34, 0x30, 0x20, 0x3d, 0x20,  // amplePoint_40 = 
  0x28, 0x76, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x34,  // (v3SamplePoint_4
  0x30, 0x20, 0x2b, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x35, 0x29, 0x3b, 0x0a,  // 0 + tmpvar_45);.
  0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72,  //     float tmpvar
  0x5f, 0x35, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f,  // _58;.    tmpvar_
  0x35, 0x38, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x64, 0x6f, 0x74, 0x20, 0x28, 0x76,  // 58 = sqrt(dot (v
  0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x34, 0x30, 0x2c,  // 3SamplePoint_40,
  0x20, 0x76, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x34,  //  v3SamplePoint_4
  0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74,  // 0));.    float t
  0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d,  // mpvar_59;.    tm
  0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x39, 0x20, 0x3d, 0x20, 0x65, 0x78, 0x70, 0x28, 0x28, 0x74,  // pvar_59 = exp((t
  0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x38, 0x20, 0x2a, 0x20, 0x28, 0x75, 0x5f, 0x77, 0x6f, 0x72,  // mpvar_8 * (u_wor
  0x6c, 0x64, 0x50, 0x6f, 0x73, 0x41, 0x6e, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x2e, 0x77, 0x20, 0x2d,  // ldPosAndSize.w -
  0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x38, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20,  //  tmpvar_58)));. 
  0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f,  //    float tmpvar_
  0x36, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36,  // 60;.    tmpvar_6
  0x30, 0x20, 0x3d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x64, 0x6f, 0x74, 0x20,  // 0 = (1.0 - (dot 
  0x28, 0x76, 0x33, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x5f, 0x34, 0x2c, 0x20, 0x76,  // (v3LightDir_4, v
  0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x34, 0x30, 0x29,  // 3SamplePoint_40)
  0x20, 0x2f, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x38, 0x29, 0x29, 0x3b, 0x0a,  //  / tmpvar_58));.
  0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72,  //     float tmpvar
  0x5f, 0x36, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f,  // _61;.    tmpvar_
  0x36, 0x31, 0x20, 0x3d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x64, 0x6f, 0x74,  // 61 = (1.0 - (dot
  0x20, 0x28, 0x76, 0x33, 0x52, 0x61, 0x79, 0x5f, 0x33, 0x2c, 0x20, 0x76, 0x33, 0x53, 0x61, 0x6d,  //  (v3Ray_3, v3Sam
  0x70, 0x6c, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x34, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x74,  // plePoint_40) / t
  0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x38, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20,  // mpvar_58));.    
  0x76, 0x33, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x20, 0x3d,  // v3FrontColor_1 =
  0x20, 0x28, 0x76, 0x33, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31,  //  (v3FrontColor_1
  0x20, 0x2b, 0x20, 0x28, 0x65, 0x78, 0x70, 0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28,  //  + (exp(.      (
  0x2d, 0x28, 0x28, 0x66, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f,  // -((fStartOffset_
  0x34, 0x32, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x39, 0x20,  // 42 + (tmpvar_59 
  0x2a, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x28, 0x30, 0x2e, 0x32,  // * .        ((0.2
  0x35, 0x20, 0x2a, 0x20, 0x65, 0x78, 0x70, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x30, 0x30, 0x32, 0x38,  // 5 * exp((-0.0028
  0x37, 0x20, 0x2b, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28,  // 7 + .          (
  0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x30, 0x20, 0x2a, 0x20, 0x28, 0x30, 0x2e, 0x34,  // tmpvar_60 * (0.4
  0x35, 0x39, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x30, 0x20,  // 59 + (tmpvar_60 
  0x2a, 0x20, 0x28, 0x33, 0x2e, 0x38, 0x33, 0x20, 0x2b, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20,  // * (3.83 + .     
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36,  //        (tmpvar_6
  0x30, 0x20, 0x2a, 0x20, 0x28, 0x2d, 0x36, 0x2e, 0x38, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x6d, 0x70,  // 0 * (-6.8 + (tmp
  0x76, 0x61, 0x72, 0x5f, 0x36, 0x30, 0x20, 0x2a, 0x20, 0x35, 0x2e, 0x32, 0x35, 0x29, 0x29, 0x29,  // var_60 * 5.25)))
  0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x29, 0x29, 0x29, 0x0a,  // .          )))).
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x28, 0x30,  //         ))) - (0
  0x2e, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x65, 0x78, 0x70, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x30, 0x30,  // .25 * exp((-0.00
  0x32, 0x38, 0x37, 0x20, 0x2b, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,  // 287 + .         
  0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x31, 0x20, 0x2a, 0x20, 0x28, 0x30,  //  (tmpvar_61 * (0
  0x2e, 0x34, 0x35, 0x39, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36,  // .459 + (tmpvar_6
  0x31, 0x20, 0x2a, 0x20, 0x28, 0x33, 0x2e, 0x38, 0x33, 0x20, 0x2b, 0x20, 0x0a, 0x20, 0x20, 0x20,  // 1 * (3.83 + .   
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72,  //          (tmpvar
  0x5f, 0x36, 0x31, 0x20, 0x2a, 0x20, 0x28, 0x2d, 0x36, 0x2e, 0x38, 0x20, 0x2b, 0x20, 0x28, 0x74,  // _61 * (-6.8 + (t
  0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x31, 0x20, 0x2a, 0x20, 0x35, 0x2e, 0x32, 0x35, 0x29,  // mpvar_61 * 5.25)
  0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x29, 0x29,  // )).          )))
  0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x29, 0x29, 0x29, 0x0a, 0x20,  // ).        )))). 
  0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28,  //      ))) * vec3(
  0x30, 0x2e, 0x31, 0x37, 0x32, 0x32, 0x31, 0x30, 0x37, 0x2c, 0x20, 0x30, 0x2e, 0x32, 0x36, 0x39,  // 0.1722107, 0.269
  0x35, 0x30, 0x35, 0x36, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x32, 0x35, 0x31, 0x31, 0x38, 0x36, 0x29,  // 5056, 0.5251186)
  0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61,  // ).    ) * (tmpva
  0x72, 0x5f, 0x35, 0x39, 0x20, 0x2a, 0x20, 0x66, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x64, 0x4c, 0x65,  // r_59 * fScaledLe
  0x6e, 0x67, 0x74, 0x68, 0x5f, 0x34, 0x31, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20,  // ngth_41)));.    
  0x76, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x34, 0x30,  // v3SamplePoint_40
  0x20, 0x3d, 0x20, 0x28, 0x76, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x50, 0x6f, 0x69, 0x6e,  //  = (v3SamplePoin
  0x74, 0x5f, 0x34, 0x30, 0x20, 0x2b, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x35,  // t_40 + tmpvar_45
  0x29, 0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74,  // );.  };.  vec3 t
  0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76,  // mpvar_62;.  tmpv
  0x61, 0x72, 0x5f, 0x36, 0x32, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x20, 0x28, 0x76, 0x33, 0x46,  // ar_62 = max (v3F
  0x72, 0x6f, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63,  // rontColor_1, vec
  0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29,  // 3(0.0, 0.0, 0.0)
  0x29, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x33, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f,  // );.  v3FrontColo
  0x72, 0x5f, 0x31, 0x20, 0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x32, 0x3b,  // r_1 = tmpvar_62;
  0x0a, 0x20, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x3d, 0x20, 0x28, 0x74,  // .  v_normal = (t
  0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x32, 0x20, 0x2a, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28,  // mpvar_62 * vec3(
  0x30, 0x2e, 0x31, 0x31, 0x32, 0x30, 0x34, 0x30, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x38, 0x39,  // 0.1120409, 0.189
  0x34, 0x36, 0x35, 0x37, 0x2c, 0x20, 0x30, 0x2e, 0x33, 0x39, 0x32, 0x38, 0x37, 0x36, 0x31, 0x29,  // 4657, 0.3928761)
  0x29, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x5f, 0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74, 0x20, 0x3d,  // );.  v_tangent =
  0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x32, 0x20, 0x2a, 0x20, 0x30, 0x2e,  //  (tmpvar_62 * 0.
  0x30, 0x32, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x5f, 0x62, 0x69, 0x74, 0x61, 0x6e, 0x67,  // 025);.  v_bitang
  0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x39, 0x20,  // ent = (tmpvar_9 
  0x2d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x32, 0x29, 0x3b, 0x0a, 0x20, 0x20,  // - tmpvar_12);.  
  0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x33, 0x3b, 0x0a,  // vec4 tmpvar_63;.
  0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x33, 0x2e, 0x77, 0x20, 0x3d, 0x20,  //   tmpvar_63.w = 
  0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x33,  // 1.0;.  tmpvar_63
  0x2e, 0x78, 0x79, 0x7a, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74,  // .xyz = ((a_posit
  0x69, 0x6f, 0x6e, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x29, 0x20,  // ion * tmpvar_5) 
  0x2d, 0x20, 0x75, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,  // - u_cameraOffset
  0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69,  // .xyz);.  gl_Posi
  0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x28, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56,  // tion = (u_modelV
  0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72,  // iewProj * tmpvar
  0x5f, 0x36, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00 };                                    // tmpvar_63);.}...
unsigned int vs_atmosphere_bin_glsl_size = 10650;

BX_UNUSED(vs_atmosphere_bin_glsl)
BX_UNUSED(vs_atmosphere_bin_glsl_size)
static const uint8_t * vs_atmosphere_bin_dx9 = NULL;
unsigned int vs_atmosphere_bin_dx9_size = 0;

BX_UNUSED(vs_atmosphere_bin_dx9)
BX_UNUSED(vs_atmosphere_bin_dx9_size)
static const uint8_t * vs_atmosphere_bin_dx11 = NULL;
unsigned int vs_atmosphere_bin_dx11_size = 0;

BX_UNUSED(vs_atmosphere_bin_dx11)
BX_UNUSED(vs_atmosphere_bin_dx11_size)
static const uint8_t * vs_atmosphere_bin_metal = NULL;
unsigned int vs_atmosphere_bin_metal_size = 0;

BX_UNUSED(vs_atmosphere_bin_metal)
BX_UNUSED(vs_atmosphere_bin_metal_size)
static const uint8_t * vs_atmosphere_bin_spirv = NULL;
unsigned int vs_atmosphere_bin_spirv_size = 0;

BX_UNUSED(vs_atmosphere_bin_spirv)
BX_UNUSED(vs_atmosphere_bin_spirv_size)
static const uint8_t * vs_atmosphere_bin_esslandroid = NULL;
unsigned int vs_atmosphere_bin_esslandroid_size = 0;

BX_UNUSED(vs_atmosphere_bin_esslandroid)
BX_UNUSED(vs_atmosphere_bin_esslandroid_size)
static const uint8_t * vs_atmosphere_bin_pssl = NULL;
unsigned int vs_atmosphere_bin_pssl_size = 0;

BX_UNUSED(vs_atmosphere_bin_pssl)
BX_UNUSED(vs_atmosphere_bin_pssl_size)
static const uint8_t * vs_atmosphere_bin_esslnacl = NULL;
unsigned int vs_atmosphere_bin_esslnacl_size = 0;

BX_UNUSED(vs_atmosphere_bin_esslnacl)
BX_UNUSED(vs_atmosphere_bin_esslnacl_size)
